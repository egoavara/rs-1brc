<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1013.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="271768"><g><title>rs-1brc.exe`core::num::dec2flt::float::impl$1::from_u64 (302 samples, 0.11%)</title><rect x="0.8529%" y="181" width="0.1111%" height="15" fill="rgb(227,0,7)" fg:x="2318" fg:w="302"/><text x="1.1029%" y="191.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::number::Number::is_fast_path (189 samples, 0.07%)</title><rect x="0.9644%" y="181" width="0.0695%" height="15" fill="rgb(217,0,24)" fg:x="2621" fg:w="189"/><text x="1.2144%" y="191.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::number::Number::try_fast_path (1,253 samples, 0.46%)</title><rect x="0.8257%" y="197" width="0.4611%" height="15" fill="rgb(221,193,54)" fg:x="2244" fg:w="1253"/><text x="1.0757%" y="207.50"></text></g><g><title>rs-1brc.exe`core::ops::arith::impl$217::div (687 samples, 0.25%)</title><rect x="1.0340%" y="181" width="0.2528%" height="15" fill="rgb(248,212,6)" fg:x="2810" fg:w="687"/><text x="1.2840%" y="191.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::try_parse_digits::closure$0 (233 samples, 0.09%)</title><rect x="3.3591%" y="133" width="0.0857%" height="15" fill="rgb(208,68,35)" fg:x="9129" fg:w="233"/><text x="3.6091%" y="143.50"></text></g><g><title>rs-1brc.exe`core::num::impl$9::wrapping_mul (106 samples, 0.04%)</title><rect x="3.4058%" y="117" width="0.0390%" height="15" fill="rgb(232,128,0)" fg:x="9256" fg:w="106"/><text x="3.6558%" y="127.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::try_parse_digits (4,116 samples, 1.51%)</title><rect x="2.1349%" y="165" width="1.5145%" height="15" fill="rgb(207,160,47)" fg:x="5802" fg:w="4116"/><text x="2.3849%" y="175.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::common::impl$0::parse_digits (3,808 samples, 1.40%)</title><rect x="2.2482%" y="149" width="1.4012%" height="15" fill="rgb(228,23,34)" fg:x="6110" fg:w="3808"/><text x="2.4982%" y="159.50"></text></g><g><title>rs-1brc.exe`core::num::impl$6::wrapping_sub (556 samples, 0.20%)</title><rect x="3.4449%" y="133" width="0.2046%" height="15" fill="rgb(218,30,26)" fg:x="9362" fg:w="556"/><text x="3.6949%" y="143.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::parse_number (6,679 samples, 2.46%)</title><rect x="1.2868%" y="197" width="2.4576%" height="15" fill="rgb(220,122,19)" fg:x="3497" fg:w="6679"/><text x="1.5368%" y="207.50">rs..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::parse_partial_number (4,980 samples, 1.83%)</title><rect x="1.9119%" y="181" width="1.8324%" height="15" fill="rgb(250,228,42)" fg:x="5196" fg:w="4980"/><text x="2.1619%" y="191.50">r..</text></g><g><title>rs-1brc.exe`core::slice::impl$0::split_first (258 samples, 0.09%)</title><rect x="3.6494%" y="165" width="0.0949%" height="15" fill="rgb(240,193,28)" fg:x="9918" fg:w="258"/><text x="3.8994%" y="175.50"></text></g><g><title>rs-1brc.exe`core::str::impl$0::parse(ref$ (9,465 samples, 3.48%)</title><rect x="0.2679%" y="245" width="3.4827%" height="15" fill="rgb(216,20,37)" fg:x="728" fg:w="9465"/><text x="0.5179%" y="255.50">rs-..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::impl$3::from_str (9,310 samples, 3.43%)</title><rect x="0.3249%" y="229" width="3.4257%" height="15" fill="rgb(206,188,39)" fg:x="883" fg:w="9310"/><text x="0.5749%" y="239.50">rs-..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::dec2flt (8,620 samples, 3.17%)</title><rect x="0.5788%" y="213" width="3.1718%" height="15" fill="rgb(217,207,13)" fg:x="1573" fg:w="8620"/><text x="0.8288%" y="223.50">rs-..</text></g><g><title>rs-1brc.exe`enum2$&lt;core::result::Result&lt;f64,core::num::dec2flt::ParseFloatError&gt; &gt;::unwrap(enum2$&lt;core::result::Result (40 samples, 0.01%)</title><rect x="3.7506%" y="245" width="0.0147%" height="15" fill="rgb(231,73,38)" fg:x="10193" fg:w="40"/><text x="4.0006%" y="255.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::finish (160 samples, 0.06%)</title><rect x="5.2206%" y="197" width="0.0589%" height="15" fill="rgb(225,20,46)" fg:x="14188" fg:w="160"/><text x="5.4706%" y="207.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (160 samples, 0.06%)</title><rect x="5.2206%" y="181" width="0.0589%" height="15" fill="rgb(210,31,41)" fg:x="14188" fg:w="160"/><text x="5.4706%" y="191.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (39 samples, 0.01%)</title><rect x="5.2652%" y="165" width="0.0144%" height="15" fill="rgb(221,200,47)" fg:x="14309" fg:w="39"/><text x="5.5152%" y="175.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (806 samples, 0.30%)</title><rect x="5.6493%" y="117" width="0.2966%" height="15" fill="rgb(226,26,5)" fg:x="15353" fg:w="806"/><text x="5.8993%" y="127.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (288 samples, 0.11%)</title><rect x="5.8399%" y="101" width="0.1060%" height="15" fill="rgb(249,33,26)" fg:x="15871" fg:w="288"/><text x="6.0899%" y="111.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::AHasher::large_update (1,005 samples, 0.37%)</title><rect x="5.5842%" y="133" width="0.3698%" height="15" fill="rgb(235,183,28)" fg:x="15176" fg:w="1005"/><text x="5.8342%" y="143.50"></text></g><g><title>rs-1brc.exe`ahash::operations::read_small(ref$&lt;slice2$ (1,248 samples, 0.46%)</title><rect x="5.9540%" y="133" width="0.4592%" height="15" fill="rgb(221,5,38)" fg:x="16181" fg:w="1248"/><text x="6.2040%" y="143.50"></text></g><g><title>rs-1brc.exe`ahash::convert::impl$0::read_last_u32(ref$&lt;slice2$ (732 samples, 0.27%)</title><rect x="6.1438%" y="117" width="0.2693%" height="15" fill="rgb(247,18,42)" fg:x="16697" fg:w="732"/><text x="6.3938%" y="127.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::write(ahash::fallback_hash::AHasher*, ref$&lt;slice2$ (3,348 samples, 1.23%)</title><rect x="5.2795%" y="149" width="1.2319%" height="15" fill="rgb(241,131,45)" fg:x="14348" fg:w="3348"/><text x="5.5295%" y="159.50"></text></g><g><title>rs-1brc.exe`core::num::impl$9::wrapping_mul (267 samples, 0.10%)</title><rect x="6.4132%" y="133" width="0.0982%" height="15" fill="rgb(249,31,29)" fg:x="17429" fg:w="267"/><text x="6.6632%" y="143.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::make_hash(core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;*, enum2$&lt;alloc::borrow::Cow (3,649 samples, 1.34%)</title><rect x="5.2206%" y="213" width="1.3427%" height="15" fill="rgb(225,111,53)" fg:x="14188" fg:w="3649"/><text x="5.4706%" y="223.50"></text></g><g><title>rs-1brc.exe`alloc::borrow::impl$12::hash(enum2$&lt;alloc::borrow::Cow (3,489 samples, 1.28%)</title><rect x="5.2795%" y="197" width="1.2838%" height="15" fill="rgb(238,160,17)" fg:x="14348" fg:w="3489"/><text x="5.5295%" y="207.50"></text></g><g><title>rs-1brc.exe`core::hash::impls::impl$2::hash(ref$ (3,489 samples, 1.28%)</title><rect x="5.2795%" y="181" width="1.2838%" height="15" fill="rgb(214,148,48)" fg:x="14348" fg:w="3489"/><text x="5.5295%" y="191.50"></text></g><g><title>rs-1brc.exe`core::hash::Hasher::write_str(ahash::fallback_hash::AHasher*, ref$ (3,489 samples, 1.28%)</title><rect x="5.2795%" y="165" width="1.2838%" height="15" fill="rgb(232,36,49)" fg:x="14348" fg:w="3489"/><text x="5.5295%" y="175.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::write_u8 (141 samples, 0.05%)</title><rect x="6.5114%" y="149" width="0.0519%" height="15" fill="rgb(209,103,24)" fg:x="17696" fg:w="141"/><text x="6.7614%" y="159.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::AHasher::update (141 samples, 0.05%)</title><rect x="6.5114%" y="133" width="0.0519%" height="15" fill="rgb(229,88,8)" fg:x="17696" fg:w="141"/><text x="6.7614%" y="143.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (115 samples, 0.04%)</title><rect x="6.5210%" y="117" width="0.0423%" height="15" fill="rgb(213,181,19)" fg:x="17722" fg:w="115"/><text x="6.7710%" y="127.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (67 samples, 0.02%)</title><rect x="6.5387%" y="101" width="0.0247%" height="15" fill="rgb(254,191,54)" fg:x="17770" fg:w="67"/><text x="6.7887%" y="111.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (123 samples, 0.05%)</title><rect x="6.5633%" y="197" width="0.0453%" height="15" fill="rgb(241,83,37)" fg:x="17837" fg:w="123"/><text x="6.8133%" y="207.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::Bucket&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow (123 samples, 0.05%)</title><rect x="6.5633%" y="181" width="0.0453%" height="15" fill="rgb(233,36,39)" fg:x="17837" fg:w="123"/><text x="6.8133%" y="191.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;enum2$&lt;alloc::borrow::Cow (123 samples, 0.05%)</title><rect x="6.5633%" y="165" width="0.0453%" height="15" fill="rgb(226,3,54)" fg:x="17837" fg:w="123"/><text x="6.8133%" y="175.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;enum2$&lt;alloc::borrow::Cow (123 samples, 0.05%)</title><rect x="6.5633%" y="149" width="0.0453%" height="15" fill="rgb(245,192,40)" fg:x="17837" fg:w="123"/><text x="6.8133%" y="159.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTableInner::probe_seq (545 samples, 0.20%)</title><rect x="6.6612%" y="181" width="0.2005%" height="15" fill="rgb(238,167,29)" fg:x="18103" fg:w="545"/><text x="6.9112%" y="191.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::bitmask::impl$3::next (324 samples, 0.12%)</title><rect x="6.8617%" y="181" width="0.1192%" height="15" fill="rgb(232,182,51)" fg:x="18648" fg:w="324"/><text x="7.1117%" y="191.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (324 samples, 0.12%)</title><rect x="6.8617%" y="165" width="0.1192%" height="15" fill="rgb(231,60,39)" fg:x="18648" fg:w="324"/><text x="7.1117%" y="175.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::h2 (111 samples, 0.04%)</title><rect x="6.9810%" y="181" width="0.0408%" height="15" fill="rgb(208,69,12)" fg:x="18972" fg:w="111"/><text x="7.2310%" y="191.50"></text></g><g><title>`0x7FFCAAEA0FC0 (153 samples, 0.06%)</title><rect x="7.3699%" y="37" width="0.0563%" height="15" fill="rgb(235,93,37)" fg:x="20029" fg:w="153"/><text x="7.6199%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FC3 (78 samples, 0.03%)</title><rect x="7.4262%" y="37" width="0.0287%" height="15" fill="rgb(213,116,39)" fg:x="20182" fg:w="78"/><text x="7.6762%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FC7 (72 samples, 0.03%)</title><rect x="7.4549%" y="37" width="0.0265%" height="15" fill="rgb(222,207,29)" fg:x="20260" fg:w="72"/><text x="7.7049%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FCC (101 samples, 0.04%)</title><rect x="7.4814%" y="37" width="0.0372%" height="15" fill="rgb(206,96,30)" fg:x="20332" fg:w="101"/><text x="7.7314%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FD2 (182 samples, 0.07%)</title><rect x="7.5204%" y="37" width="0.0670%" height="15" fill="rgb(218,138,4)" fg:x="20438" fg:w="182"/><text x="7.7704%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FD5 (407 samples, 0.15%)</title><rect x="7.5874%" y="37" width="0.1498%" height="15" fill="rgb(250,191,14)" fg:x="20620" fg:w="407"/><text x="7.8374%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FDA (177 samples, 0.07%)</title><rect x="7.7371%" y="37" width="0.0651%" height="15" fill="rgb(239,60,40)" fg:x="21027" fg:w="177"/><text x="7.9871%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FE0 (156 samples, 0.06%)</title><rect x="7.8026%" y="37" width="0.0574%" height="15" fill="rgb(206,27,48)" fg:x="21205" fg:w="156"/><text x="8.0526%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FE5 (188 samples, 0.07%)</title><rect x="7.8600%" y="37" width="0.0692%" height="15" fill="rgb(225,35,8)" fg:x="21361" fg:w="188"/><text x="8.1100%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FEE (121 samples, 0.04%)</title><rect x="7.9325%" y="37" width="0.0445%" height="15" fill="rgb(250,213,24)" fg:x="21558" fg:w="121"/><text x="8.1825%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FF2 (731 samples, 0.27%)</title><rect x="7.9770%" y="37" width="0.2690%" height="15" fill="rgb(247,123,22)" fg:x="21679" fg:w="731"/><text x="8.2270%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FF5 (423 samples, 0.16%)</title><rect x="8.2460%" y="37" width="0.1556%" height="15" fill="rgb(231,138,38)" fg:x="22410" fg:w="423"/><text x="8.4960%" y="47.50"></text></g><g><title>`0x7FFCAAEA0FFA (565 samples, 0.21%)</title><rect x="8.4017%" y="37" width="0.2079%" height="15" fill="rgb(231,145,46)" fg:x="22833" fg:w="565"/><text x="8.6517%" y="47.50"></text></g><g><title>`0x7FFCAAEA1002 (252 samples, 0.09%)</title><rect x="8.6118%" y="37" width="0.0927%" height="15" fill="rgb(251,118,11)" fg:x="23404" fg:w="252"/><text x="8.8618%" y="47.50"></text></g><g><title>`0x7FFCAAEA1050 (69 samples, 0.03%)</title><rect x="8.7229%" y="37" width="0.0254%" height="15" fill="rgb(217,147,25)" fg:x="23706" fg:w="69"/><text x="8.9729%" y="47.50"></text></g><g><title>`0x7FFCAAEA1057 (43 samples, 0.02%)</title><rect x="8.7556%" y="37" width="0.0158%" height="15" fill="rgb(247,81,37)" fg:x="23795" fg:w="43"/><text x="9.0056%" y="47.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;*, tuple$&lt;enum2$&lt;alloc::borrow::Cow (4,936 samples, 1.82%)</title><rect x="7.0222%" y="165" width="1.8163%" height="15" fill="rgb(209,12,38)" fg:x="19084" fg:w="4936"/><text x="7.2722%" y="175.50">r..</text></g><g><title>rs-1brc.exe`hashbrown::impl$0::equivalent(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;*, enum2$&lt;alloc::borrow::Cow (4,936 samples, 1.82%)</title><rect x="7.0222%" y="149" width="1.8163%" height="15" fill="rgb(227,1,9)" fg:x="19084" fg:w="4936"/><text x="7.2722%" y="159.50">r..</text></g><g><title>rs-1brc.exe`core::cmp::impls::impl$9::eq(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;**, enum2$&lt;alloc::borrow::Cow (4,936 samples, 1.82%)</title><rect x="7.0222%" y="133" width="1.8163%" height="15" fill="rgb(248,47,43)" fg:x="19084" fg:w="4936"/><text x="7.2722%" y="143.50">r..</text></g><g><title>rs-1brc.exe`alloc::borrow::impl$7::eq(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;*, enum2$&lt;alloc::borrow::Cow (4,852 samples, 1.79%)</title><rect x="7.0531%" y="117" width="1.7853%" height="15" fill="rgb(221,10,30)" fg:x="19168" fg:w="4852"/><text x="7.3031%" y="127.50">r..</text></g><g><title>rs-1brc.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (4,852 samples, 1.79%)</title><rect x="7.0531%" y="101" width="1.7853%" height="15" fill="rgb(210,229,1)" fg:x="19168" fg:w="4852"/><text x="7.3031%" y="111.50">r..</text></g><g><title>rs-1brc.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (4,852 samples, 1.79%)</title><rect x="7.0531%" y="85" width="1.7853%" height="15" fill="rgb(222,148,37)" fg:x="19168" fg:w="4852"/><text x="7.3031%" y="95.50">r..</text></g><g><title>rs-1brc.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (4,852 samples, 1.79%)</title><rect x="7.0531%" y="69" width="1.7853%" height="15" fill="rgb(234,67,33)" fg:x="19168" fg:w="4852"/><text x="7.3031%" y="79.50">r..</text></g><g><title>rs-1brc.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (4,852 samples, 1.79%)</title><rect x="7.0531%" y="53" width="1.7853%" height="15" fill="rgb(247,98,35)" fg:x="19168" fg:w="4852"/><text x="7.3031%" y="63.50">r..</text></g><g><title>rs-1brc.exe`memcmp (150 samples, 0.06%)</title><rect x="8.7832%" y="37" width="0.0552%" height="15" fill="rgb(247,138,52)" fg:x="23870" fg:w="150"/><text x="9.0332%" y="47.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow (5,167 samples, 1.90%)</title><rect x="7.0218%" y="181" width="1.9013%" height="15" fill="rgb(213,79,30)" fg:x="19083" fg:w="5167"/><text x="7.2718%" y="191.50">r..</text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (230 samples, 0.08%)</title><rect x="8.8384%" y="165" width="0.0846%" height="15" fill="rgb(246,177,23)" fg:x="24020" fg:w="230"/><text x="9.0884%" y="175.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::Bucket&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow (230 samples, 0.08%)</title><rect x="8.8384%" y="149" width="0.0846%" height="15" fill="rgb(230,62,27)" fg:x="24020" fg:w="230"/><text x="9.0884%" y="159.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;enum2$&lt;alloc::borrow::Cow (230 samples, 0.08%)</title><rect x="8.8384%" y="133" width="0.0846%" height="15" fill="rgb(216,154,8)" fg:x="24020" fg:w="230"/><text x="9.0884%" y="143.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::load (201 samples, 0.07%)</title><rect x="8.9231%" y="181" width="0.0740%" height="15" fill="rgb(244,35,45)" fg:x="24250" fg:w="201"/><text x="9.1731%" y="191.50"></text></g><g><title>rs-1brc.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (201 samples, 0.07%)</title><rect x="8.9231%" y="165" width="0.0740%" height="15" fill="rgb(251,115,12)" fg:x="24250" fg:w="201"/><text x="9.1731%" y="175.50"></text></g><g><title>rs-1brc.exe`core::intrinsics::copy_nonoverlapping (201 samples, 0.07%)</title><rect x="8.9231%" y="149" width="0.0740%" height="15" fill="rgb(240,54,50)" fg:x="24250" fg:w="201"/><text x="9.1731%" y="159.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::match_byte (173 samples, 0.06%)</title><rect x="8.9970%" y="181" width="0.0637%" height="15" fill="rgb(233,84,52)" fg:x="24451" fg:w="173"/><text x="9.2470%" y="191.50"></text></g><g><title>rs-1brc.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (173 samples, 0.06%)</title><rect x="8.9970%" y="165" width="0.0637%" height="15" fill="rgb(207,117,47)" fg:x="24451" fg:w="173"/><text x="9.2470%" y="175.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;(enum2$&lt;alloc::borrow::Cow (12,891 samples, 4.74%)</title><rect x="4.3224%" y="229" width="4.7434%" height="15" fill="rgb(249,43,39)" fg:x="11747" fg:w="12891"/><text x="4.5724%" y="239.50">rs-1br..</text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow (6,801 samples, 2.50%)</title><rect x="6.5633%" y="213" width="2.5025%" height="15" fill="rgb(209,38,44)" fg:x="17837" fg:w="6801"/><text x="6.8133%" y="223.50">rs..</text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (6,678 samples, 2.46%)</title><rect x="6.6086%" y="197" width="2.4572%" height="15" fill="rgb(236,212,23)" fg:x="17960" fg:w="6678"/><text x="6.8586%" y="207.50">rs..</text></g><g><title>rs-1brc.exe`core::f64::impl$0::max (141 samples, 0.05%)</title><rect x="9.1736%" y="213" width="0.0519%" height="15" fill="rgb(242,79,21)" fg:x="24931" fg:w="141"/><text x="9.4236%" y="223.50"></text></g><g><title>rs-1brc.exe`enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;::and_modify(enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (15,159 samples, 5.58%)</title><rect x="3.7653%" y="245" width="5.5779%" height="15" fill="rgb(211,96,35)" fg:x="10233" fg:w="15159"/><text x="4.0153%" y="255.50">rs-1brc..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::run::closure$1::closure$0 (754 samples, 0.28%)</title><rect x="9.0658%" y="229" width="0.2774%" height="15" fill="rgb(253,215,40)" fg:x="24638" fg:w="754"/><text x="9.3158%" y="239.50"></text></g><g><title>rs-1brc.exe`core::f64::impl$0::min (320 samples, 0.12%)</title><rect x="9.2255%" y="213" width="0.1177%" height="15" fill="rgb(211,81,21)" fg:x="25072" fg:w="320"/><text x="9.4755%" y="223.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::OccupiedEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::into_mut(hashbrown::map::OccupiedEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (35 samples, 0.01%)</title><rect x="9.3433%" y="229" width="0.0129%" height="15" fill="rgb(208,190,38)" fg:x="25392" fg:w="35"/><text x="9.5933%" y="239.50"></text></g><g><title>rs-1brc.exe`core::ptr::drop_in_place(hashbrown::map::OccupiedEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (35 samples, 0.01%)</title><rect x="9.3433%" y="213" width="0.0129%" height="15" fill="rgb(235,213,38)" fg:x="25392" fg:w="35"/><text x="9.5933%" y="223.50"></text></g><g><title>rs-1brc.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow (35 samples, 0.01%)</title><rect x="9.3433%" y="197" width="0.0129%" height="15" fill="rgb(237,122,38)" fg:x="25392" fg:w="35"/><text x="9.5933%" y="207.50"></text></g><g><title>rs-1brc.exe`enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;::or_insert_with(enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (58 samples, 0.02%)</title><rect x="9.3433%" y="245" width="0.0213%" height="15" fill="rgb(244,218,35)" fg:x="25392" fg:w="58"/><text x="9.5933%" y="255.50"></text></g><g><title>rs-1brc.exe`core::core_simd::masks::Mask&lt;i8,32&gt;::first_set(core::core_simd::masks::Mask (6,530 samples, 2.40%)</title><rect x="9.8246%" y="229" width="2.4028%" height="15" fill="rgb(240,68,47)" fg:x="26700" fg:w="6530"/><text x="10.0746%" y="239.50">rs..</text></g><g><title>rs-1brc.exe`core::core_simd::masks::Mask&lt;i8,32&gt;::to_bitmask(core::core_simd::masks::Mask (6,344 samples, 2.33%)</title><rect x="9.8930%" y="213" width="2.3343%" height="15" fill="rgb(210,16,53)" fg:x="26886" fg:w="6344"/><text x="10.1430%" y="223.50">r..</text></g><g><title>rs-1brc.exe`core::core_simd::masks::mask_impl::Mask&lt;i8,32&gt;::to_bitmask_integer(core::core_simd::masks::mask_impl::Mask (6,344 samples, 2.33%)</title><rect x="9.8930%" y="197" width="2.3343%" height="15" fill="rgb(235,124,12)" fg:x="26886" fg:w="6344"/><text x="10.1430%" y="207.50">r..</text></g><g><title>rs-1brc.exe`core::core_simd::masks::mask_impl::Mask&lt;i8,32&gt;::to_bitmask_impl(core::core_simd::masks::mask_impl::Mask (6,344 samples, 2.33%)</title><rect x="9.8930%" y="181" width="2.3343%" height="15" fill="rgb(224,169,11)" fg:x="26886" fg:w="6344"/><text x="10.1430%" y="191.50">r..</text></g><g><title>rs-1brc.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::Range (705 samples, 0.26%)</title><rect x="12.2273%" y="229" width="0.2594%" height="15" fill="rgb(250,166,2)" fg:x="33230" fg:w="705"/><text x="12.4773%" y="239.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (705 samples, 0.26%)</title><rect x="12.2273%" y="213" width="0.2594%" height="15" fill="rgb(242,216,29)" fg:x="33230" fg:w="705"/><text x="12.4773%" y="223.50"></text></g><g><title>`0x7FFCAAEA11E4 (1,101 samples, 0.41%)</title><rect x="13.4696%" y="197" width="0.4051%" height="15" fill="rgb(230,116,27)" fg:x="36606" fg:w="1101"/><text x="13.7196%" y="207.50"></text></g><g><title>`0x7FFCAAEA11EA (317 samples, 0.12%)</title><rect x="13.8769%" y="197" width="0.1166%" height="15" fill="rgb(228,99,48)" fg:x="37713" fg:w="317"/><text x="14.1269%" y="207.50"></text></g><g><title>`0x7FFCAAEA11F1 (124 samples, 0.05%)</title><rect x="13.9936%" y="197" width="0.0456%" height="15" fill="rgb(253,11,6)" fg:x="38030" fg:w="124"/><text x="14.2436%" y="207.50"></text></g><g><title>`0x7FFCAAEA11F5 (59 samples, 0.02%)</title><rect x="14.0392%" y="197" width="0.0217%" height="15" fill="rgb(247,143,39)" fg:x="38154" fg:w="59"/><text x="14.2892%" y="207.50"></text></g><g><title>`0x7FFCAAEA11FC (446 samples, 0.16%)</title><rect x="14.0609%" y="197" width="0.1641%" height="15" fill="rgb(236,97,10)" fg:x="38213" fg:w="446"/><text x="14.3109%" y="207.50"></text></g><g><title>`0x7FFCAAEA2010 (53 samples, 0.02%)</title><rect x="14.2250%" y="197" width="0.0195%" height="15" fill="rgb(233,208,19)" fg:x="38659" fg:w="53"/><text x="14.4750%" y="207.50"></text></g><g><title>rs-1brc.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::LatchRef&lt;rayon_core::latch::LockLatch&gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(tuple$ (39,704 samples, 14.61%)</title><rect x="0.0063%" y="645" width="14.6095%" height="15" fill="rgb(216,164,2)" fg:x="17" fg:w="39704"/><text x="0.2563%" y="655.50">rs-1brc.exe`rayon_core..</text></g><g><title>rs-1brc.exe`enum2$&lt;rayon_core::job::JobResult&lt;tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt; &gt;::call(rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,704 samples, 14.61%)</title><rect x="0.0063%" y="629" width="14.6095%" height="15" fill="rgb(220,129,5)" fg:x="17" fg:w="39704"/><text x="0.2563%" y="639.50">rs-1brc.exe`enum2$&lt;ray..</text></g><g><title>rs-1brc.exe`std::panicking::try&lt;tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,704 samples, 14.61%)</title><rect x="0.0063%" y="613" width="14.6095%" height="15" fill="rgb(242,17,10)" fg:x="17" fg:w="39704"/><text x="0.2563%" y="623.50">rs-1brc.exe`std::panic..</text></g><g><title>rs-1brc.exe`std::panicking::try::do_call (39,704 samples, 14.61%)</title><rect x="0.0063%" y="597" width="14.6095%" height="15" fill="rgb(242,107,0)" fg:x="17" fg:w="39704"/><text x="0.2563%" y="607.50">rs-1brc.exe`std::panic..</text></g><g><title>rs-1brc.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,704 samples, 14.61%)</title><rect x="0.0063%" y="581" width="14.6095%" height="15" fill="rgb(251,28,31)" fg:x="17" fg:w="39704"/><text x="0.2563%" y="591.50">rs-1brc.exe`rayon_core..</text></g><g><title>rs-1brc.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (39,704 samples, 14.61%)</title><rect x="0.0063%" y="565" width="14.6095%" height="15" fill="rgb(233,223,10)" fg:x="17" fg:w="39704"/><text x="0.2563%" y="575.50">rs-1brc.exe`std::panic..</text></g><g><title>rs-1brc.exe`std::panicking::try::do_call (39,704 samples, 14.61%)</title><rect x="0.0063%" y="549" width="14.6095%" height="15" fill="rgb(215,21,27)" fg:x="17" fg:w="39704"/><text x="0.2563%" y="559.50">rs-1brc.exe`std::panic..</text></g><g><title>rs-1brc.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;usize&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (39,704 samples, 14.61%)</title><rect x="0.0063%" y="533" width="14.6095%" height="15" fill="rgb(232,23,21)" fg:x="17" fg:w="39704"/><text x="0.2563%" y="543.50">rs-1brc.exe`rayon::ite..</text></g><g><title>rs-1brc.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,703 samples, 14.61%)</title><rect x="0.0066%" y="517" width="14.6092%" height="15" fill="rgb(244,5,23)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="527.50">rs-1brc.exe`rayon_core..</text></g><g><title>rs-1brc.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,703 samples, 14.61%)</title><rect x="0.0066%" y="501" width="14.6092%" height="15" fill="rgb(226,81,46)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="511.50">rs-1brc.exe`rayon_core..</text></g><g><title>rs-1brc.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (39,703 samples, 14.61%)</title><rect x="0.0066%" y="485" width="14.6092%" height="15" fill="rgb(247,70,30)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="495.50">rs-1brc.exe`std::panic..</text></g><g><title>rs-1brc.exe`std::panicking::try::do_call (39,703 samples, 14.61%)</title><rect x="0.0066%" y="469" width="14.6092%" height="15" fill="rgb(212,68,19)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="479.50">rs-1brc.exe`std::panic..</text></g><g><title>rs-1brc.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;usize&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (39,703 samples, 14.61%)</title><rect x="0.0066%" y="453" width="14.6092%" height="15" fill="rgb(240,187,13)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="463.50">rs-1brc.exe`rayon::ite..</text></g><g><title>rs-1brc.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,703 samples, 14.61%)</title><rect x="0.0066%" y="437" width="14.6092%" height="15" fill="rgb(223,113,26)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="447.50">rs-1brc.exe`rayon_core..</text></g><g><title>rs-1brc.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,703 samples, 14.61%)</title><rect x="0.0066%" y="421" width="14.6092%" height="15" fill="rgb(206,192,2)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="431.50">rs-1brc.exe`rayon_core..</text></g><g><title>rs-1brc.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (39,703 samples, 14.61%)</title><rect x="0.0066%" y="405" width="14.6092%" height="15" fill="rgb(241,108,4)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="415.50">rs-1brc.exe`std::panic..</text></g><g><title>rs-1brc.exe`std::panicking::try::do_call (39,703 samples, 14.61%)</title><rect x="0.0066%" y="389" width="14.6092%" height="15" fill="rgb(247,173,49)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="399.50">rs-1brc.exe`std::panic..</text></g><g><title>rs-1brc.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;usize&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (39,703 samples, 14.61%)</title><rect x="0.0066%" y="373" width="14.6092%" height="15" fill="rgb(224,114,35)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="383.50">rs-1brc.exe`rayon::ite..</text></g><g><title>rs-1brc.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,703 samples, 14.61%)</title><rect x="0.0066%" y="357" width="14.6092%" height="15" fill="rgb(245,159,27)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="367.50">rs-1brc.exe`rayon::ite..</text></g><g><title>rs-1brc.exe`rayon::iter::reduce::impl$5::complete(rayon::iter::reduce::ReduceFolder&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,703 samples, 14.61%)</title><rect x="0.0066%" y="341" width="14.6092%" height="15" fill="rgb(245,172,44)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="351.50">rs-1brc.exe`rayon::ite..</text></g><g><title>rs-1brc.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::slice::iter::Iter&lt;usize&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$2&gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;usize&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt; &gt;, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,703 samples, 14.61%)</title><rect x="0.0066%" y="325" width="14.6092%" height="15" fill="rgb(236,23,11)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="335.50">rs-1brc.exe`core::iter..</text></g><g><title>rs-1brc.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;usize&gt;, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;usize&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,ref$ (39,703 samples, 14.61%)</title><rect x="0.0066%" y="309" width="14.6092%" height="15" fill="rgb(205,117,38)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="319.50">rs-1brc.exe`core::slic..</text></g><g><title>rs-1brc.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;usize&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$2&gt; &gt;*, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (39,703 samples, 14.61%)</title><rect x="0.0066%" y="293" width="14.6092%" height="15" fill="rgb(237,72,25)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="303.50">rs-1brc.exe`core::iter..</text></g><g><title>rs-1brc.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;usize&gt; &gt;,rs_1brc::approach_3::run::closure_env$1&gt; (39,703 samples, 14.61%)</title><rect x="0.0066%" y="277" width="14.6092%" height="15" fill="rgb(244,70,9)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="287.50">rs-1brc.exe`core::ops:..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::run::closure$1 (39,703 samples, 14.61%)</title><rect x="0.0066%" y="261" width="14.6092%" height="15" fill="rgb(217,125,39)" fg:x="18" fg:w="39703"/><text x="0.2566%" y="271.50">rs-1brc.exe`rs_1brc::a..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::next (14,271 samples, 5.25%)</title><rect x="9.3646%" y="245" width="5.2512%" height="15" fill="rgb(235,36,10)" fg:x="25450" fg:w="14271"/><text x="9.6146%" y="255.50">rs-1br..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::fill_by_slice(ref$&lt;slice2$ (5,770 samples, 2.12%)</title><rect x="12.4926%" y="229" width="2.1231%" height="15" fill="rgb(251,123,47)" fg:x="33951" fg:w="5770"/><text x="12.7426%" y="239.50">r..</text></g><g><title>rs-1brc.exe`core::intrinsics::copy_nonoverlapping (5,626 samples, 2.07%)</title><rect x="12.5456%" y="213" width="2.0701%" height="15" fill="rgb(221,13,13)" fg:x="34095" fg:w="5626"/><text x="12.7956%" y="223.50">r..</text></g><g><title>rs-1brc.exe`memcpy (1,009 samples, 0.37%)</title><rect x="14.2445%" y="197" width="0.3713%" height="15" fill="rgb(238,131,9)" fg:x="38712" fg:w="1009"/><text x="14.4945%" y="207.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::float::impl$1::from_u64 (522 samples, 0.19%)</title><rect x="16.0372%" y="389" width="0.1921%" height="15" fill="rgb(211,50,8)" fg:x="43584" fg:w="522"/><text x="16.2872%" y="399.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::number::Number::is_fast_path (309 samples, 0.11%)</title><rect x="16.2319%" y="389" width="0.1137%" height="15" fill="rgb(245,182,24)" fg:x="44113" fg:w="309"/><text x="16.4819%" y="399.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::number::Number::try_fast_path (1,689 samples, 0.62%)</title><rect x="16.0100%" y="405" width="0.6215%" height="15" fill="rgb(242,14,37)" fg:x="43510" fg:w="1689"/><text x="16.2600%" y="415.50"></text></g><g><title>rs-1brc.exe`core::ops::arith::impl$217::div (777 samples, 0.29%)</title><rect x="16.3456%" y="389" width="0.2859%" height="15" fill="rgb(246,228,12)" fg:x="44422" fg:w="777"/><text x="16.5956%" y="399.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::try_parse_digits::closure$0 (439 samples, 0.16%)</title><rect x="21.2358%" y="341" width="0.1615%" height="15" fill="rgb(213,55,15)" fg:x="57712" fg:w="439"/><text x="21.4858%" y="351.50"></text></g><g><title>rs-1brc.exe`core::num::impl$9::wrapping_mul (204 samples, 0.08%)</title><rect x="21.3222%" y="325" width="0.0751%" height="15" fill="rgb(209,9,3)" fg:x="57947" fg:w="204"/><text x="21.5722%" y="335.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::try_parse_digits (9,342 samples, 3.44%)</title><rect x="18.4941%" y="373" width="3.4375%" height="15" fill="rgb(230,59,30)" fg:x="50261" fg:w="9342"/><text x="18.7441%" y="383.50">rs-..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::common::impl$0::parse_digits (8,514 samples, 3.13%)</title><rect x="18.7988%" y="357" width="3.1328%" height="15" fill="rgb(209,121,21)" fg:x="51089" fg:w="8514"/><text x="19.0488%" y="367.50">rs-..</text></g><g><title>rs-1brc.exe`core::num::impl$6::wrapping_sub (1,452 samples, 0.53%)</title><rect x="21.3973%" y="341" width="0.5343%" height="15" fill="rgb(220,109,13)" fg:x="58151" fg:w="1452"/><text x="21.6473%" y="351.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::parse_number (14,886 samples, 5.48%)</title><rect x="16.6315%" y="405" width="5.4775%" height="15" fill="rgb(232,18,1)" fg:x="45199" fg:w="14886"/><text x="16.8815%" y="415.50">rs-1brc..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::parse_partial_number (11,050 samples, 4.07%)</title><rect x="18.0430%" y="389" width="4.0660%" height="15" fill="rgb(215,41,42)" fg:x="49035" fg:w="11050"/><text x="18.2930%" y="399.50">rs-1..</text></g><g><title>rs-1brc.exe`core::slice::impl$0::split_first (482 samples, 0.18%)</title><rect x="21.9316%" y="373" width="0.1774%" height="15" fill="rgb(224,123,36)" fg:x="59603" fg:w="482"/><text x="22.1816%" y="383.50"></text></g><g><title>rs-1brc.exe`core::str::impl$0::parse(ref$ (19,256 samples, 7.09%)</title><rect x="15.0400%" y="453" width="7.0855%" height="15" fill="rgb(240,125,3)" fg:x="40874" fg:w="19256"/><text x="15.2900%" y="463.50">rs-1brc.ex..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::impl$3::from_str (19,006 samples, 6.99%)</title><rect x="15.1320%" y="437" width="6.9935%" height="15" fill="rgb(205,98,50)" fg:x="41124" fg:w="19006"/><text x="15.3820%" y="447.50">rs-1brc.e..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::dec2flt (17,845 samples, 6.57%)</title><rect x="15.5592%" y="421" width="6.5663%" height="15" fill="rgb(205,185,37)" fg:x="42285" fg:w="17845"/><text x="15.8092%" y="431.50">rs-1brc.e..</text></g><g><title>rs-1brc.exe`core::slice::impl$0::first (45 samples, 0.02%)</title><rect x="22.1089%" y="405" width="0.0166%" height="15" fill="rgb(238,207,15)" fg:x="60085" fg:w="45"/><text x="22.3589%" y="415.50"></text></g><g><title>rs-1brc.exe`enum2$&lt;core::result::Result&lt;f64,core::num::dec2flt::ParseFloatError&gt; &gt;::unwrap(enum2$&lt;core::result::Result (87 samples, 0.03%)</title><rect x="22.1255%" y="453" width="0.0320%" height="15" fill="rgb(213,199,42)" fg:x="60130" fg:w="87"/><text x="22.3755%" y="463.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::finish (245 samples, 0.09%)</title><rect x="24.7185%" y="405" width="0.0902%" height="15" fill="rgb(235,201,11)" fg:x="67177" fg:w="245"/><text x="24.9685%" y="415.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (245 samples, 0.09%)</title><rect x="24.7185%" y="389" width="0.0902%" height="15" fill="rgb(207,46,11)" fg:x="67177" fg:w="245"/><text x="24.9685%" y="399.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (42 samples, 0.02%)</title><rect x="24.7932%" y="373" width="0.0155%" height="15" fill="rgb(241,35,35)" fg:x="67380" fg:w="42"/><text x="25.0432%" y="383.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (1,998 samples, 0.74%)</title><rect x="25.6671%" y="325" width="0.7352%" height="15" fill="rgb(243,32,47)" fg:x="69755" fg:w="1998"/><text x="25.9171%" y="335.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (644 samples, 0.24%)</title><rect x="26.1653%" y="309" width="0.2370%" height="15" fill="rgb(247,202,23)" fg:x="71109" fg:w="644"/><text x="26.4153%" y="319.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::AHasher::large_update (2,393 samples, 0.88%)</title><rect x="25.5369%" y="341" width="0.8805%" height="15" fill="rgb(219,102,11)" fg:x="69401" fg:w="2393"/><text x="25.7869%" y="351.50"></text></g><g><title>rs-1brc.exe`core::num::impl$9::wrapping_add (39 samples, 0.01%)</title><rect x="26.4030%" y="325" width="0.0144%" height="15" fill="rgb(243,110,44)" fg:x="71755" fg:w="39"/><text x="26.6530%" y="335.50"></text></g><g><title>rs-1brc.exe`ahash::operations::read_small(ref$&lt;slice2$ (2,920 samples, 1.07%)</title><rect x="26.4174%" y="341" width="1.0744%" height="15" fill="rgb(222,74,54)" fg:x="71794" fg:w="2920"/><text x="26.6674%" y="351.50"></text></g><g><title>rs-1brc.exe`ahash::convert::impl$0::read_last_u32(ref$&lt;slice2$ (1,689 samples, 0.62%)</title><rect x="26.8703%" y="325" width="0.6215%" height="15" fill="rgb(216,99,12)" fg:x="73025" fg:w="1689"/><text x="27.1203%" y="335.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::write(ahash::fallback_hash::AHasher*, ref$&lt;slice2$ (7,968 samples, 2.93%)</title><rect x="24.8087%" y="357" width="2.9319%" height="15" fill="rgb(226,22,26)" fg:x="67422" fg:w="7968"/><text x="25.0587%" y="367.50">rs..</text></g><g><title>rs-1brc.exe`core::num::impl$9::wrapping_mul (676 samples, 0.25%)</title><rect x="27.4918%" y="341" width="0.2487%" height="15" fill="rgb(217,163,10)" fg:x="74714" fg:w="676"/><text x="27.7418%" y="351.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::make_hash(core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;*, enum2$&lt;alloc::borrow::Cow (8,444 samples, 3.11%)</title><rect x="24.7185%" y="421" width="3.1071%" height="15" fill="rgb(213,25,53)" fg:x="67177" fg:w="8444"/><text x="24.9685%" y="431.50">rs-..</text></g><g><title>rs-1brc.exe`alloc::borrow::impl$12::hash(enum2$&lt;alloc::borrow::Cow (8,199 samples, 3.02%)</title><rect x="24.8087%" y="405" width="3.0169%" height="15" fill="rgb(252,105,26)" fg:x="67422" fg:w="8199"/><text x="25.0587%" y="415.50">rs-..</text></g><g><title>rs-1brc.exe`core::hash::impls::impl$2::hash(ref$ (8,199 samples, 3.02%)</title><rect x="24.8087%" y="389" width="3.0169%" height="15" fill="rgb(220,39,43)" fg:x="67422" fg:w="8199"/><text x="25.0587%" y="399.50">rs-..</text></g><g><title>rs-1brc.exe`core::hash::Hasher::write_str(ahash::fallback_hash::AHasher*, ref$ (8,199 samples, 3.02%)</title><rect x="24.8087%" y="373" width="3.0169%" height="15" fill="rgb(229,68,48)" fg:x="67422" fg:w="8199"/><text x="25.0587%" y="383.50">rs-..</text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::write_u8 (231 samples, 0.08%)</title><rect x="27.7406%" y="357" width="0.0850%" height="15" fill="rgb(252,8,32)" fg:x="75390" fg:w="231"/><text x="27.9906%" y="367.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::AHasher::update (231 samples, 0.08%)</title><rect x="27.7406%" y="341" width="0.0850%" height="15" fill="rgb(223,20,43)" fg:x="75390" fg:w="231"/><text x="27.9906%" y="351.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (193 samples, 0.07%)</title><rect x="27.7546%" y="325" width="0.0710%" height="15" fill="rgb(229,81,49)" fg:x="75428" fg:w="193"/><text x="28.0046%" y="335.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (121 samples, 0.04%)</title><rect x="27.7810%" y="309" width="0.0445%" height="15" fill="rgb(236,28,36)" fg:x="75500" fg:w="121"/><text x="28.0310%" y="319.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (170 samples, 0.06%)</title><rect x="27.8256%" y="405" width="0.0626%" height="15" fill="rgb(249,185,26)" fg:x="75621" fg:w="170"/><text x="28.0756%" y="415.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::Bucket&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow (170 samples, 0.06%)</title><rect x="27.8256%" y="389" width="0.0626%" height="15" fill="rgb(249,174,33)" fg:x="75621" fg:w="170"/><text x="28.0756%" y="399.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;enum2$&lt;alloc::borrow::Cow (170 samples, 0.06%)</title><rect x="27.8256%" y="373" width="0.0626%" height="15" fill="rgb(233,201,37)" fg:x="75621" fg:w="170"/><text x="28.0756%" y="383.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;enum2$&lt;alloc::borrow::Cow (170 samples, 0.06%)</title><rect x="27.8256%" y="357" width="0.0626%" height="15" fill="rgb(221,78,26)" fg:x="75621" fg:w="170"/><text x="28.0756%" y="367.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTableInner::probe_seq (869 samples, 0.32%)</title><rect x="27.9901%" y="389" width="0.3198%" height="15" fill="rgb(250,127,30)" fg:x="76068" fg:w="869"/><text x="28.2401%" y="399.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::bitmask::impl$3::next (602 samples, 0.22%)</title><rect x="28.3098%" y="389" width="0.2215%" height="15" fill="rgb(230,49,44)" fg:x="76937" fg:w="602"/><text x="28.5598%" y="399.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (602 samples, 0.22%)</title><rect x="28.3098%" y="373" width="0.2215%" height="15" fill="rgb(229,67,23)" fg:x="76937" fg:w="602"/><text x="28.5598%" y="383.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::h2 (205 samples, 0.08%)</title><rect x="28.5313%" y="389" width="0.0754%" height="15" fill="rgb(249,83,47)" fg:x="77539" fg:w="205"/><text x="28.7813%" y="399.50"></text></g><g><title>`0x7FFCAAEA0FC0 (161 samples, 0.06%)</title><rect x="29.2941%" y="245" width="0.0592%" height="15" fill="rgb(215,43,3)" fg:x="79612" fg:w="161"/><text x="29.5441%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FC3 (141 samples, 0.05%)</title><rect x="29.3533%" y="245" width="0.0519%" height="15" fill="rgb(238,154,13)" fg:x="79773" fg:w="141"/><text x="29.6033%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FC7 (84 samples, 0.03%)</title><rect x="29.4052%" y="245" width="0.0309%" height="15" fill="rgb(219,56,2)" fg:x="79914" fg:w="84"/><text x="29.6552%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FCC (136 samples, 0.05%)</title><rect x="29.4361%" y="245" width="0.0500%" height="15" fill="rgb(233,0,4)" fg:x="79998" fg:w="136"/><text x="29.6861%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FD2 (271 samples, 0.10%)</title><rect x="29.4899%" y="245" width="0.0997%" height="15" fill="rgb(235,30,7)" fg:x="80144" fg:w="271"/><text x="29.7399%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FD5 (712 samples, 0.26%)</title><rect x="29.5896%" y="245" width="0.2620%" height="15" fill="rgb(250,79,13)" fg:x="80415" fg:w="712"/><text x="29.8396%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FDA (261 samples, 0.10%)</title><rect x="29.8519%" y="245" width="0.0960%" height="15" fill="rgb(211,146,34)" fg:x="81128" fg:w="261"/><text x="30.1019%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FE0 (247 samples, 0.09%)</title><rect x="29.9487%" y="245" width="0.0909%" height="15" fill="rgb(228,22,38)" fg:x="81391" fg:w="247"/><text x="30.1987%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FE5 (267 samples, 0.10%)</title><rect x="30.0396%" y="245" width="0.0982%" height="15" fill="rgb(235,168,5)" fg:x="81638" fg:w="267"/><text x="30.2896%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FEE (212 samples, 0.08%)</title><rect x="30.1437%" y="245" width="0.0780%" height="15" fill="rgb(221,155,16)" fg:x="81921" fg:w="212"/><text x="30.3937%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FF2 (1,008 samples, 0.37%)</title><rect x="30.2217%" y="245" width="0.3709%" height="15" fill="rgb(215,215,53)" fg:x="82133" fg:w="1008"/><text x="30.4717%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FF5 (857 samples, 0.32%)</title><rect x="30.5926%" y="245" width="0.3153%" height="15" fill="rgb(223,4,10)" fg:x="83141" fg:w="857"/><text x="30.8426%" y="255.50"></text></g><g><title>`0x7FFCAAEA0FFA (817 samples, 0.30%)</title><rect x="30.9080%" y="245" width="0.3006%" height="15" fill="rgb(234,103,6)" fg:x="83998" fg:w="817"/><text x="31.1580%" y="255.50"></text></g><g><title>`0x7FFCAAEA1002 (373 samples, 0.14%)</title><rect x="31.2101%" y="245" width="0.1372%" height="15" fill="rgb(227,97,0)" fg:x="84819" fg:w="373"/><text x="31.4601%" y="255.50"></text></g><g><title>`0x7FFCAAEA100E (65 samples, 0.02%)</title><rect x="31.3510%" y="245" width="0.0239%" height="15" fill="rgb(234,150,53)" fg:x="85202" fg:w="65"/><text x="31.6010%" y="255.50"></text></g><g><title>`0x7FFCAAEA1050 (75 samples, 0.03%)</title><rect x="31.3812%" y="245" width="0.0276%" height="15" fill="rgb(228,201,54)" fg:x="85284" fg:w="75"/><text x="31.6312%" y="255.50"></text></g><g><title>`0x7FFCAAEA1057 (64 samples, 0.02%)</title><rect x="31.4180%" y="245" width="0.0235%" height="15" fill="rgb(222,22,37)" fg:x="85384" fg:w="64"/><text x="31.6680%" y="255.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;*, tuple$&lt;enum2$&lt;alloc::borrow::Cow (8,014 samples, 2.95%)</title><rect x="28.6068%" y="373" width="2.9488%" height="15" fill="rgb(237,53,32)" fg:x="77744" fg:w="8014"/><text x="28.8568%" y="383.50">rs..</text></g><g><title>rs-1brc.exe`hashbrown::impl$0::equivalent(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;*, enum2$&lt;alloc::borrow::Cow (8,014 samples, 2.95%)</title><rect x="28.6068%" y="357" width="2.9488%" height="15" fill="rgb(233,25,53)" fg:x="77744" fg:w="8014"/><text x="28.8568%" y="367.50">rs..</text></g><g><title>rs-1brc.exe`core::cmp::impls::impl$9::eq(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;**, enum2$&lt;alloc::borrow::Cow (8,014 samples, 2.95%)</title><rect x="28.6068%" y="341" width="2.9488%" height="15" fill="rgb(210,40,34)" fg:x="77744" fg:w="8014"/><text x="28.8568%" y="351.50">rs..</text></g><g><title>rs-1brc.exe`alloc::borrow::impl$7::eq(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;*, enum2$&lt;alloc::borrow::Cow (7,890 samples, 2.90%)</title><rect x="28.6524%" y="325" width="2.9032%" height="15" fill="rgb(241,220,44)" fg:x="77868" fg:w="7890"/><text x="28.9024%" y="335.50">rs..</text></g><g><title>rs-1brc.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (7,890 samples, 2.90%)</title><rect x="28.6524%" y="309" width="2.9032%" height="15" fill="rgb(235,28,35)" fg:x="77868" fg:w="7890"/><text x="28.9024%" y="319.50">rs..</text></g><g><title>rs-1brc.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (7,890 samples, 2.90%)</title><rect x="28.6524%" y="293" width="2.9032%" height="15" fill="rgb(210,56,17)" fg:x="77868" fg:w="7890"/><text x="28.9024%" y="303.50">rs..</text></g><g><title>rs-1brc.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (7,890 samples, 2.90%)</title><rect x="28.6524%" y="277" width="2.9032%" height="15" fill="rgb(224,130,29)" fg:x="77868" fg:w="7890"/><text x="28.9024%" y="287.50">rs..</text></g><g><title>rs-1brc.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (7,890 samples, 2.90%)</title><rect x="28.6524%" y="261" width="2.9032%" height="15" fill="rgb(235,212,8)" fg:x="77868" fg:w="7890"/><text x="28.9024%" y="271.50">rs..</text></g><g><title>rs-1brc.exe`memcmp (267 samples, 0.10%)</title><rect x="31.4573%" y="245" width="0.0982%" height="15" fill="rgb(223,33,50)" fg:x="85491" fg:w="267"/><text x="31.7073%" y="255.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow (8,403 samples, 3.09%)</title><rect x="28.6068%" y="389" width="3.0920%" height="15" fill="rgb(219,149,13)" fg:x="77744" fg:w="8403"/><text x="28.8568%" y="399.50">rs-..</text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (389 samples, 0.14%)</title><rect x="31.5556%" y="373" width="0.1431%" height="15" fill="rgb(250,156,29)" fg:x="85758" fg:w="389"/><text x="31.8056%" y="383.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::Bucket&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow (388 samples, 0.14%)</title><rect x="31.5560%" y="357" width="0.1428%" height="15" fill="rgb(216,193,19)" fg:x="85759" fg:w="388"/><text x="31.8060%" y="367.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;enum2$&lt;alloc::borrow::Cow (388 samples, 0.14%)</title><rect x="31.5560%" y="341" width="0.1428%" height="15" fill="rgb(216,135,14)" fg:x="85759" fg:w="388"/><text x="31.8060%" y="351.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::load (394 samples, 0.14%)</title><rect x="31.6987%" y="389" width="0.1450%" height="15" fill="rgb(241,47,5)" fg:x="86147" fg:w="394"/><text x="31.9487%" y="399.50"></text></g><g><title>rs-1brc.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (394 samples, 0.14%)</title><rect x="31.6987%" y="373" width="0.1450%" height="15" fill="rgb(233,42,35)" fg:x="86147" fg:w="394"/><text x="31.9487%" y="383.50"></text></g><g><title>rs-1brc.exe`core::intrinsics::copy_nonoverlapping (394 samples, 0.14%)</title><rect x="31.6987%" y="357" width="0.1450%" height="15" fill="rgb(231,13,6)" fg:x="86147" fg:w="394"/><text x="31.9487%" y="367.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::match_byte (366 samples, 0.13%)</title><rect x="31.8437%" y="389" width="0.1347%" height="15" fill="rgb(207,181,40)" fg:x="86541" fg:w="366"/><text x="32.0937%" y="399.50"></text></g><g><title>rs-1brc.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (366 samples, 0.13%)</title><rect x="31.8437%" y="373" width="0.1347%" height="15" fill="rgb(254,173,49)" fg:x="86541" fg:w="366"/><text x="32.0937%" y="383.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;(enum2$&lt;alloc::borrow::Cow (24,621 samples, 9.06%)</title><rect x="22.9354%" y="437" width="9.0596%" height="15" fill="rgb(221,1,38)" fg:x="62331" fg:w="24621"/><text x="23.1854%" y="447.50">rs-1brc.exe`h..</text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow (11,331 samples, 4.17%)</title><rect x="27.8256%" y="421" width="4.1694%" height="15" fill="rgb(206,124,46)" fg:x="75621" fg:w="11331"/><text x="28.0756%" y="431.50">rs-1b..</text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (11,161 samples, 4.11%)</title><rect x="27.8881%" y="405" width="4.1068%" height="15" fill="rgb(249,21,11)" fg:x="75791" fg:w="11161"/><text x="28.1381%" y="415.50">rs-1..</text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::match_empty (45 samples, 0.02%)</title><rect x="31.9784%" y="389" width="0.0166%" height="15" fill="rgb(222,201,40)" fg:x="86907" fg:w="45"/><text x="32.2284%" y="399.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::match_byte (45 samples, 0.02%)</title><rect x="31.9784%" y="373" width="0.0166%" height="15" fill="rgb(235,61,29)" fg:x="86907" fg:w="45"/><text x="32.2284%" y="383.50"></text></g><g><title>rs-1brc.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (45 samples, 0.02%)</title><rect x="31.9784%" y="357" width="0.0166%" height="15" fill="rgb(219,207,3)" fg:x="86907" fg:w="45"/><text x="32.2284%" y="367.50"></text></g><g><title>rs-1brc.exe`core::f64::impl$0::max (239 samples, 0.09%)</title><rect x="32.2433%" y="421" width="0.0879%" height="15" fill="rgb(222,56,46)" fg:x="87627" fg:w="239"/><text x="32.4933%" y="431.50"></text></g><g><title>rs-1brc.exe`enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;::and_modify(enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (28,270 samples, 10.40%)</title><rect x="22.1575%" y="453" width="10.4023%" height="15" fill="rgb(239,76,54)" fg:x="60217" fg:w="28270"/><text x="22.4075%" y="463.50">rs-1brc.exe`enu..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::run::closure$1::closure$0 (1,535 samples, 0.56%)</title><rect x="31.9949%" y="437" width="0.5648%" height="15" fill="rgb(231,124,27)" fg:x="86952" fg:w="1535"/><text x="32.2449%" y="447.50"></text></g><g><title>rs-1brc.exe`core::f64::impl$0::min (621 samples, 0.23%)</title><rect x="32.3313%" y="421" width="0.2285%" height="15" fill="rgb(249,195,6)" fg:x="87866" fg:w="621"/><text x="32.5813%" y="431.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::OccupiedEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::into_mut(hashbrown::map::OccupiedEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (79 samples, 0.03%)</title><rect x="32.5598%" y="437" width="0.0291%" height="15" fill="rgb(237,174,47)" fg:x="88487" fg:w="79"/><text x="32.8098%" y="447.50"></text></g><g><title>rs-1brc.exe`core::ptr::drop_in_place(hashbrown::map::OccupiedEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (79 samples, 0.03%)</title><rect x="32.5598%" y="421" width="0.0291%" height="15" fill="rgb(206,201,31)" fg:x="88487" fg:w="79"/><text x="32.8098%" y="431.50"></text></g><g><title>rs-1brc.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow (79 samples, 0.03%)</title><rect x="32.5598%" y="405" width="0.0291%" height="15" fill="rgb(231,57,52)" fg:x="88487" fg:w="79"/><text x="32.8098%" y="415.50"></text></g><g><title>rs-1brc.exe`enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;::or_insert_with(enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (123 samples, 0.05%)</title><rect x="32.5598%" y="453" width="0.0453%" height="15" fill="rgb(248,177,22)" fg:x="88487" fg:w="123"/><text x="32.8098%" y="463.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::VacantEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::insert(hashbrown::map::VacantEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (44 samples, 0.02%)</title><rect x="32.5888%" y="437" width="0.0162%" height="15" fill="rgb(215,211,37)" fg:x="88566" fg:w="44"/><text x="32.8388%" y="447.50"></text></g><g><title>rs-1brc.exe`core::core_simd::masks::Mask&lt;i8,32&gt;::first_set(core::core_simd::masks::Mask (13,080 samples, 4.81%)</title><rect x="33.3178%" y="437" width="4.8129%" height="15" fill="rgb(241,128,51)" fg:x="90547" fg:w="13080"/><text x="33.5678%" y="447.50">rs-1br..</text></g><g><title>rs-1brc.exe`core::core_simd::masks::Mask&lt;i8,32&gt;::to_bitmask(core::core_simd::masks::Mask (12,678 samples, 4.67%)</title><rect x="33.4657%" y="421" width="4.6650%" height="15" fill="rgb(227,165,31)" fg:x="90949" fg:w="12678"/><text x="33.7157%" y="431.50">rs-1b..</text></g><g><title>rs-1brc.exe`core::core_simd::masks::mask_impl::Mask&lt;i8,32&gt;::to_bitmask_integer(core::core_simd::masks::mask_impl::Mask (12,678 samples, 4.67%)</title><rect x="33.4657%" y="405" width="4.6650%" height="15" fill="rgb(228,167,24)" fg:x="90949" fg:w="12678"/><text x="33.7157%" y="415.50">rs-1b..</text></g><g><title>rs-1brc.exe`core::core_simd::masks::mask_impl::Mask&lt;i8,32&gt;::to_bitmask_impl(core::core_simd::masks::mask_impl::Mask (12,678 samples, 4.67%)</title><rect x="33.4657%" y="389" width="4.6650%" height="15" fill="rgb(228,143,12)" fg:x="90949" fg:w="12678"/><text x="33.7157%" y="399.50">rs-1b..</text></g><g><title>rs-1brc.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::Range (1,152 samples, 0.42%)</title><rect x="38.1307%" y="437" width="0.4239%" height="15" fill="rgb(249,149,8)" fg:x="103627" fg:w="1152"/><text x="38.3807%" y="447.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (1,152 samples, 0.42%)</title><rect x="38.1307%" y="421" width="0.4239%" height="15" fill="rgb(243,35,44)" fg:x="103627" fg:w="1152"/><text x="38.3807%" y="431.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (39 samples, 0.01%)</title><rect x="38.5546%" y="437" width="0.0144%" height="15" fill="rgb(246,89,9)" fg:x="104779" fg:w="39"/><text x="38.8046%" y="447.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (39 samples, 0.01%)</title><rect x="38.5546%" y="421" width="0.0144%" height="15" fill="rgb(233,213,13)" fg:x="104779" fg:w="39"/><text x="38.8046%" y="431.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (39 samples, 0.01%)</title><rect x="38.5546%" y="405" width="0.0144%" height="15" fill="rgb(233,141,41)" fg:x="104779" fg:w="39"/><text x="38.8046%" y="415.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (39 samples, 0.01%)</title><rect x="38.5546%" y="389" width="0.0144%" height="15" fill="rgb(239,167,4)" fg:x="104779" fg:w="39"/><text x="38.8046%" y="399.50"></text></g><g><title>rs-1brc.exe`core::ptr::const_ptr::impl$0::add (39 samples, 0.01%)</title><rect x="38.5546%" y="373" width="0.0144%" height="15" fill="rgb(209,217,16)" fg:x="104779" fg:w="39"/><text x="38.8046%" y="383.50"></text></g><g><title>`0x7FFCAAEA10C0 (53 samples, 0.02%)</title><rect x="40.6365%" y="405" width="0.0195%" height="15" fill="rgb(219,88,35)" fg:x="110437" fg:w="53"/><text x="40.8865%" y="415.50"></text></g><g><title>`0x7FFCAAEA10CA (32 samples, 0.01%)</title><rect x="40.6652%" y="405" width="0.0118%" height="15" fill="rgb(220,193,23)" fg:x="110515" fg:w="32"/><text x="40.9152%" y="415.50"></text></g><g><title>`0x7FFCAAEA10CE (49 samples, 0.02%)</title><rect x="40.6770%" y="405" width="0.0180%" height="15" fill="rgb(230,90,52)" fg:x="110547" fg:w="49"/><text x="40.9270%" y="415.50"></text></g><g><title>`0x7FFCAAEA11E4 (1,872 samples, 0.69%)</title><rect x="40.6950%" y="405" width="0.6888%" height="15" fill="rgb(252,106,19)" fg:x="110596" fg:w="1872"/><text x="40.9450%" y="415.50"></text></g><g><title>`0x7FFCAAEA11E6 (35 samples, 0.01%)</title><rect x="41.3838%" y="405" width="0.0129%" height="15" fill="rgb(206,74,20)" fg:x="112468" fg:w="35"/><text x="41.6338%" y="415.50"></text></g><g><title>`0x7FFCAAEA11EA (1,151 samples, 0.42%)</title><rect x="41.3967%" y="405" width="0.4235%" height="15" fill="rgb(230,138,44)" fg:x="112503" fg:w="1151"/><text x="41.6467%" y="415.50"></text></g><g><title>`0x7FFCAAEA11F1 (350 samples, 0.13%)</title><rect x="41.8202%" y="405" width="0.1288%" height="15" fill="rgb(235,182,43)" fg:x="113654" fg:w="350"/><text x="42.0702%" y="415.50"></text></g><g><title>`0x7FFCAAEA11F5 (113 samples, 0.04%)</title><rect x="41.9490%" y="405" width="0.0416%" height="15" fill="rgb(242,16,51)" fg:x="114004" fg:w="113"/><text x="42.1990%" y="415.50"></text></g><g><title>`0x7FFCAAEA11FC (1,090 samples, 0.40%)</title><rect x="41.9906%" y="405" width="0.4011%" height="15" fill="rgb(248,9,4)" fg:x="114117" fg:w="1090"/><text x="42.2406%" y="415.50"></text></g><g><title>`0x7FFCAAEA2010 (96 samples, 0.04%)</title><rect x="42.3917%" y="405" width="0.0353%" height="15" fill="rgb(210,31,22)" fg:x="115207" fg:w="96"/><text x="42.6417%" y="415.50"></text></g><g><title>rs-1brc.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;usize&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$2&gt; &gt;*, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (77,225 samples, 28.42%)</title><rect x="14.6158%" y="501" width="28.4158%" height="15" fill="rgb(239,54,39)" fg:x="39721" fg:w="77225"/><text x="14.8658%" y="511.50">rs-1brc.exe`core::iter::adapters::map::map_fol..</text></g><g><title>rs-1brc.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;usize&gt; &gt;,rs_1brc::approach_3::run::closure_env$1&gt; (77,225 samples, 28.42%)</title><rect x="14.6158%" y="485" width="28.4158%" height="15" fill="rgb(230,99,41)" fg:x="39721" fg:w="77225"/><text x="14.8658%" y="495.50">rs-1brc.exe`core::ops::function::impls::impl$1..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::run::closure$1 (77,225 samples, 28.42%)</title><rect x="14.6158%" y="469" width="28.4158%" height="15" fill="rgb(253,106,12)" fg:x="39721" fg:w="77225"/><text x="14.8658%" y="479.50">rs-1brc.exe`rs_1brc::approach_3::run::closure$1</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::next (28,336 samples, 10.43%)</title><rect x="32.6050%" y="453" width="10.4265%" height="15" fill="rgb(213,46,41)" fg:x="88610" fg:w="28336"/><text x="32.8550%" y="463.50">rs-1brc.exe`rs_..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::fill_by_slice(ref$&lt;slice2$ (12,128 samples, 4.46%)</title><rect x="38.5689%" y="437" width="4.4626%" height="15" fill="rgb(215,133,35)" fg:x="104818" fg:w="12128"/><text x="38.8189%" y="447.50">rs-1b..</text></g><g><title>rs-1brc.exe`core::intrinsics::copy_nonoverlapping (11,872 samples, 4.37%)</title><rect x="38.6631%" y="421" width="4.3684%" height="15" fill="rgb(213,28,5)" fg:x="105074" fg:w="11872"/><text x="38.9131%" y="431.50">rs-1b..</text></g><g><title>rs-1brc.exe`memcpy (1,643 samples, 0.60%)</title><rect x="42.4270%" y="405" width="0.6046%" height="15" fill="rgb(215,77,49)" fg:x="115303" fg:w="1643"/><text x="42.6770%" y="415.50"></text></g><g><title>rs-1brc.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (77,226 samples, 28.42%)</title><rect x="14.6158%" y="565" width="28.4161%" height="15" fill="rgb(248,100,22)" fg:x="39721" fg:w="77226"/><text x="14.8658%" y="575.50">rs-1brc.exe`rayon::iter::map::impl$8::complete..</text></g><g><title>rs-1brc.exe`rayon::iter::reduce::impl$5::complete(rayon::iter::reduce::ReduceFolder&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (77,226 samples, 28.42%)</title><rect x="14.6158%" y="549" width="28.4161%" height="15" fill="rgb(208,67,9)" fg:x="39721" fg:w="77226"/><text x="14.8658%" y="559.50">rs-1brc.exe`rayon::iter::reduce::impl$5::compl..</text></g><g><title>rs-1brc.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::slice::iter::Iter&lt;usize&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$2&gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;usize&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt; &gt;, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (77,226 samples, 28.42%)</title><rect x="14.6158%" y="533" width="28.4161%" height="15" fill="rgb(219,133,21)" fg:x="39721" fg:w="77226"/><text x="14.8658%" y="543.50">rs-1brc.exe`core::iter::adapters::map::impl$2:..</text></g><g><title>rs-1brc.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;usize&gt;, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;usize&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,ref$ (77,226 samples, 28.42%)</title><rect x="14.6158%" y="517" width="28.4161%" height="15" fill="rgb(246,46,29)" fg:x="39721" fg:w="77226"/><text x="14.8658%" y="527.50">rs-1brc.exe`core::slice::iter::impl$181::fold(..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::float::impl$1::from_u64 (1,433 samples, 0.53%)</title><rect x="45.7471%" y="309" width="0.5273%" height="15" fill="rgb(246,185,52)" fg:x="124326" fg:w="1433"/><text x="45.9971%" y="319.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::number::Number::is_fast_path (549 samples, 0.20%)</title><rect x="46.2773%" y="309" width="0.2020%" height="15" fill="rgb(252,136,11)" fg:x="125767" fg:w="549"/><text x="46.5273%" y="319.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::number::Number::try_fast_path (4,787 samples, 1.76%)</title><rect x="45.5245%" y="325" width="1.7614%" height="15" fill="rgb(219,138,53)" fg:x="123721" fg:w="4787"/><text x="45.7745%" y="335.50"></text></g><g><title>rs-1brc.exe`core::ops::arith::impl$217::div (2,192 samples, 0.81%)</title><rect x="46.4794%" y="309" width="0.8066%" height="15" fill="rgb(211,51,23)" fg:x="126316" fg:w="2192"/><text x="46.7294%" y="319.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::try_parse_digits::closure$0 (751 samples, 0.28%)</title><rect x="55.2055%" y="261" width="0.2763%" height="15" fill="rgb(247,221,28)" fg:x="150031" fg:w="751"/><text x="55.4555%" y="271.50"></text></g><g><title>rs-1brc.exe`core::num::impl$9::wrapping_mul (363 samples, 0.13%)</title><rect x="55.3483%" y="245" width="0.1336%" height="15" fill="rgb(251,222,45)" fg:x="150419" fg:w="363"/><text x="55.5983%" y="255.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::try_parse_digits (16,183 samples, 5.95%)</title><rect x="50.4500%" y="293" width="5.9547%" height="15" fill="rgb(217,162,53)" fg:x="137107" fg:w="16183"/><text x="50.7000%" y="303.50">rs-1brc...</text></g><g><title>rs-1brc.exe`core::num::dec2flt::common::impl$0::parse_digits (14,838 samples, 5.46%)</title><rect x="50.9449%" y="277" width="5.4598%" height="15" fill="rgb(229,93,14)" fg:x="138452" fg:w="14838"/><text x="51.1949%" y="287.50">rs-1brc..</text></g><g><title>rs-1brc.exe`core::num::impl$6::wrapping_sub (2,508 samples, 0.92%)</title><rect x="55.4819%" y="261" width="0.9228%" height="15" fill="rgb(209,67,49)" fg:x="150782" fg:w="2508"/><text x="55.7319%" y="271.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::parse_number (25,671 samples, 9.45%)</title><rect x="47.2859%" y="325" width="9.4459%" height="15" fill="rgb(213,87,29)" fg:x="128508" fg:w="25671"/><text x="47.5359%" y="335.50">rs-1brc.exe`co..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::parse_partial_number (19,086 samples, 7.02%)</title><rect x="49.7089%" y="309" width="7.0229%" height="15" fill="rgb(205,151,52)" fg:x="135093" fg:w="19086"/><text x="49.9589%" y="319.50">rs-1brc.e..</text></g><g><title>rs-1brc.exe`core::slice::impl$0::split_first (889 samples, 0.33%)</title><rect x="56.4047%" y="293" width="0.3271%" height="15" fill="rgb(253,215,39)" fg:x="153290" fg:w="889"/><text x="56.6547%" y="303.50"></text></g><g><title>rs-1brc.exe`core::str::impl$0::parse(ref$ (35,181 samples, 12.95%)</title><rect x="43.8138%" y="373" width="12.9452%" height="15" fill="rgb(221,220,41)" fg:x="119072" fg:w="35181"/><text x="44.0638%" y="383.50">rs-1brc.exe`core::s..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::impl$3::from_str (34,755 samples, 12.79%)</title><rect x="43.9706%" y="357" width="12.7885%" height="15" fill="rgb(218,133,21)" fg:x="119498" fg:w="34755"/><text x="44.2206%" y="367.50">rs-1brc.exe`core::n..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::dec2flt (32,623 samples, 12.00%)</title><rect x="44.7551%" y="341" width="12.0040%" height="15" fill="rgb(221,193,43)" fg:x="121630" fg:w="32623"/><text x="45.0051%" y="351.50">rs-1brc.exe`core::..</text></g><g><title>rs-1brc.exe`core::slice::impl$0::first (74 samples, 0.03%)</title><rect x="56.7318%" y="325" width="0.0272%" height="15" fill="rgb(240,128,52)" fg:x="154179" fg:w="74"/><text x="56.9818%" y="335.50"></text></g><g><title>rs-1brc.exe`enum2$&lt;core::result::Result&lt;f64,core::num::dec2flt::ParseFloatError&gt; &gt;::unwrap(enum2$&lt;core::result::Result (174 samples, 0.06%)</title><rect x="56.7591%" y="373" width="0.0640%" height="15" fill="rgb(253,114,12)" fg:x="154253" fg:w="174"/><text x="57.0091%" y="383.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::finish (416 samples, 0.15%)</title><rect x="61.3284%" y="325" width="0.1531%" height="15" fill="rgb(215,223,47)" fg:x="166671" fg:w="416"/><text x="61.5784%" y="335.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (416 samples, 0.15%)</title><rect x="61.3284%" y="309" width="0.1531%" height="15" fill="rgb(248,225,23)" fg:x="166671" fg:w="416"/><text x="61.5784%" y="319.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (84 samples, 0.03%)</title><rect x="61.4506%" y="293" width="0.0309%" height="15" fill="rgb(250,108,0)" fg:x="167003" fg:w="84"/><text x="61.7006%" y="303.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (3,039 samples, 1.12%)</title><rect x="62.8797%" y="245" width="1.1182%" height="15" fill="rgb(228,208,7)" fg:x="170887" fg:w="3039"/><text x="63.1297%" y="255.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (1,027 samples, 0.38%)</title><rect x="63.6201%" y="229" width="0.3779%" height="15" fill="rgb(244,45,10)" fg:x="172899" fg:w="1027"/><text x="63.8701%" y="239.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::AHasher::large_update (3,634 samples, 1.34%)</title><rect x="62.6818%" y="261" width="1.3372%" height="15" fill="rgb(207,125,25)" fg:x="170349" fg:w="3634"/><text x="62.9318%" y="271.50"></text></g><g><title>rs-1brc.exe`core::num::impl$9::wrapping_add (53 samples, 0.02%)</title><rect x="63.9994%" y="245" width="0.0195%" height="15" fill="rgb(210,195,18)" fg:x="173930" fg:w="53"/><text x="64.2494%" y="255.50"></text></g><g><title>rs-1brc.exe`ahash::operations::read_small(ref$&lt;slice2$ (4,765 samples, 1.75%)</title><rect x="64.0189%" y="261" width="1.7533%" height="15" fill="rgb(249,80,12)" fg:x="173983" fg:w="4765"/><text x="64.2689%" y="271.50"></text></g><g><title>rs-1brc.exe`ahash::convert::impl$0::read_last_u32(ref$&lt;slice2$ (2,806 samples, 1.03%)</title><rect x="64.7398%" y="245" width="1.0325%" height="15" fill="rgb(221,65,9)" fg:x="175942" fg:w="2806"/><text x="64.9898%" y="255.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::write(ahash::fallback_hash::AHasher*, ref$&lt;slice2$ (12,830 samples, 4.72%)</title><rect x="61.4815%" y="277" width="4.7209%" height="15" fill="rgb(235,49,36)" fg:x="167087" fg:w="12830"/><text x="61.7315%" y="287.50">rs-1br..</text></g><g><title>rs-1brc.exe`core::num::impl$9::wrapping_mul (1,169 samples, 0.43%)</title><rect x="65.7723%" y="261" width="0.4301%" height="15" fill="rgb(225,32,20)" fg:x="178748" fg:w="1169"/><text x="66.0223%" y="271.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::make_hash(core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;*, enum2$&lt;alloc::borrow::Cow (13,636 samples, 5.02%)</title><rect x="61.3284%" y="341" width="5.0175%" height="15" fill="rgb(215,141,46)" fg:x="166671" fg:w="13636"/><text x="61.5784%" y="351.50">rs-1br..</text></g><g><title>rs-1brc.exe`alloc::borrow::impl$12::hash(enum2$&lt;alloc::borrow::Cow (13,220 samples, 4.86%)</title><rect x="61.4815%" y="325" width="4.8644%" height="15" fill="rgb(250,160,47)" fg:x="167087" fg:w="13220"/><text x="61.7315%" y="335.50">rs-1br..</text></g><g><title>rs-1brc.exe`core::hash::impls::impl$2::hash(ref$ (13,220 samples, 4.86%)</title><rect x="61.4815%" y="309" width="4.8644%" height="15" fill="rgb(216,222,40)" fg:x="167087" fg:w="13220"/><text x="61.7315%" y="319.50">rs-1br..</text></g><g><title>rs-1brc.exe`core::hash::Hasher::write_str(ahash::fallback_hash::AHasher*, ref$ (13,220 samples, 4.86%)</title><rect x="61.4815%" y="293" width="4.8644%" height="15" fill="rgb(234,217,39)" fg:x="167087" fg:w="13220"/><text x="61.7315%" y="303.50">rs-1br..</text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::write_u8 (390 samples, 0.14%)</title><rect x="66.2024%" y="277" width="0.1435%" height="15" fill="rgb(207,178,40)" fg:x="179917" fg:w="390"/><text x="66.4524%" y="287.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::AHasher::update (390 samples, 0.14%)</title><rect x="66.2024%" y="261" width="0.1435%" height="15" fill="rgb(221,136,13)" fg:x="179917" fg:w="390"/><text x="66.4524%" y="271.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (329 samples, 0.12%)</title><rect x="66.2249%" y="245" width="0.1211%" height="15" fill="rgb(249,199,10)" fg:x="179978" fg:w="329"/><text x="66.4749%" y="255.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (227 samples, 0.08%)</title><rect x="66.2624%" y="229" width="0.0835%" height="15" fill="rgb(249,222,13)" fg:x="180080" fg:w="227"/><text x="66.5124%" y="239.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (276 samples, 0.10%)</title><rect x="66.3459%" y="325" width="0.1016%" height="15" fill="rgb(244,185,38)" fg:x="180307" fg:w="276"/><text x="66.5959%" y="335.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::Bucket&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow (276 samples, 0.10%)</title><rect x="66.3459%" y="309" width="0.1016%" height="15" fill="rgb(236,202,9)" fg:x="180307" fg:w="276"/><text x="66.5959%" y="319.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;enum2$&lt;alloc::borrow::Cow (276 samples, 0.10%)</title><rect x="66.3459%" y="293" width="0.1016%" height="15" fill="rgb(250,229,37)" fg:x="180307" fg:w="276"/><text x="66.5959%" y="303.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;enum2$&lt;alloc::borrow::Cow (276 samples, 0.10%)</title><rect x="66.3459%" y="277" width="0.1016%" height="15" fill="rgb(206,174,23)" fg:x="180307" fg:w="276"/><text x="66.5959%" y="287.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTableInner::probe_seq (1,435 samples, 0.53%)</title><rect x="66.6259%" y="309" width="0.5280%" height="15" fill="rgb(211,33,43)" fg:x="181068" fg:w="1435"/><text x="66.8759%" y="319.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::bitmask::impl$3::next (1,007 samples, 0.37%)</title><rect x="67.1540%" y="309" width="0.3705%" height="15" fill="rgb(245,58,50)" fg:x="182503" fg:w="1007"/><text x="67.4040%" y="319.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,007 samples, 0.37%)</title><rect x="67.1540%" y="293" width="0.3705%" height="15" fill="rgb(244,68,36)" fg:x="182503" fg:w="1007"/><text x="67.4040%" y="303.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::h2 (352 samples, 0.13%)</title><rect x="67.5245%" y="309" width="0.1295%" height="15" fill="rgb(232,229,15)" fg:x="183510" fg:w="352"/><text x="67.7745%" y="319.50"></text></g><g><title>`0x7FFCAAEA0FC0 (325 samples, 0.12%)</title><rect x="68.7171%" y="165" width="0.1196%" height="15" fill="rgb(254,30,23)" fg:x="186751" fg:w="325"/><text x="68.9671%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FC3 (205 samples, 0.08%)</title><rect x="68.8367%" y="165" width="0.0754%" height="15" fill="rgb(235,160,14)" fg:x="187076" fg:w="205"/><text x="69.0867%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FC7 (165 samples, 0.06%)</title><rect x="68.9121%" y="165" width="0.0607%" height="15" fill="rgb(212,155,44)" fg:x="187281" fg:w="165"/><text x="69.1621%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FCC (280 samples, 0.10%)</title><rect x="68.9728%" y="165" width="0.1030%" height="15" fill="rgb(226,2,50)" fg:x="187446" fg:w="280"/><text x="69.2228%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FD2 (490 samples, 0.18%)</title><rect x="69.0828%" y="165" width="0.1803%" height="15" fill="rgb(234,177,6)" fg:x="187745" fg:w="490"/><text x="69.3328%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FD5 (1,121 samples, 0.41%)</title><rect x="69.2631%" y="165" width="0.4125%" height="15" fill="rgb(217,24,9)" fg:x="188235" fg:w="1121"/><text x="69.5131%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FDA (454 samples, 0.17%)</title><rect x="69.6756%" y="165" width="0.1671%" height="15" fill="rgb(220,13,46)" fg:x="189356" fg:w="454"/><text x="69.9256%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FE0 (355 samples, 0.13%)</title><rect x="69.8441%" y="165" width="0.1306%" height="15" fill="rgb(239,221,27)" fg:x="189814" fg:w="355"/><text x="70.0941%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FE5 (482 samples, 0.18%)</title><rect x="69.9748%" y="165" width="0.1774%" height="15" fill="rgb(222,198,25)" fg:x="190169" fg:w="482"/><text x="70.2248%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FEB (28 samples, 0.01%)</title><rect x="70.1521%" y="165" width="0.0103%" height="15" fill="rgb(211,99,13)" fg:x="190651" fg:w="28"/><text x="70.4021%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FEE (352 samples, 0.13%)</title><rect x="70.1624%" y="165" width="0.1295%" height="15" fill="rgb(232,111,31)" fg:x="190679" fg:w="352"/><text x="70.4124%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FF2 (1,792 samples, 0.66%)</title><rect x="70.2919%" y="165" width="0.6594%" height="15" fill="rgb(245,82,37)" fg:x="191031" fg:w="1792"/><text x="70.5419%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FF5 (1,243 samples, 0.46%)</title><rect x="70.9513%" y="165" width="0.4574%" height="15" fill="rgb(227,149,46)" fg:x="192823" fg:w="1243"/><text x="71.2013%" y="175.50"></text></g><g><title>`0x7FFCAAEA0FFA (1,370 samples, 0.50%)</title><rect x="71.4105%" y="165" width="0.5041%" height="15" fill="rgb(218,36,50)" fg:x="194071" fg:w="1370"/><text x="71.6605%" y="175.50"></text></g><g><title>`0x7FFCAAEA1002 (734 samples, 0.27%)</title><rect x="71.9176%" y="165" width="0.2701%" height="15" fill="rgb(226,80,48)" fg:x="195449" fg:w="734"/><text x="72.1676%" y="175.50"></text></g><g><title>`0x7FFCAAEA100E (100 samples, 0.04%)</title><rect x="72.1925%" y="165" width="0.0368%" height="15" fill="rgb(238,224,15)" fg:x="196196" fg:w="100"/><text x="72.4425%" y="175.50"></text></g><g><title>`0x7FFCAAEA1050 (137 samples, 0.05%)</title><rect x="72.2414%" y="165" width="0.0504%" height="15" fill="rgb(241,136,10)" fg:x="196329" fg:w="137"/><text x="72.4914%" y="175.50"></text></g><g><title>`0x7FFCAAEA1053 (40 samples, 0.01%)</title><rect x="72.2918%" y="165" width="0.0147%" height="15" fill="rgb(208,32,45)" fg:x="196466" fg:w="40"/><text x="72.5418%" y="175.50"></text></g><g><title>`0x7FFCAAEA1057 (111 samples, 0.04%)</title><rect x="72.3065%" y="165" width="0.0408%" height="15" fill="rgb(207,135,9)" fg:x="196506" fg:w="111"/><text x="72.5565%" y="175.50"></text></g><g><title>`0x7FFCAAEA105D (33 samples, 0.01%)</title><rect x="72.3474%" y="165" width="0.0121%" height="15" fill="rgb(206,86,44)" fg:x="196617" fg:w="33"/><text x="72.5974%" y="175.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;*, tuple$&lt;enum2$&lt;alloc::borrow::Cow (13,282 samples, 4.89%)</title><rect x="67.6540%" y="293" width="4.8873%" height="15" fill="rgb(245,177,15)" fg:x="183862" fg:w="13282"/><text x="67.9040%" y="303.50">rs-1br..</text></g><g><title>rs-1brc.exe`hashbrown::impl$0::equivalent(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;*, enum2$&lt;alloc::borrow::Cow (13,282 samples, 4.89%)</title><rect x="67.6540%" y="277" width="4.8873%" height="15" fill="rgb(206,64,50)" fg:x="183862" fg:w="13282"/><text x="67.9040%" y="287.50">rs-1br..</text></g><g><title>rs-1brc.exe`core::cmp::impls::impl$9::eq(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;**, enum2$&lt;alloc::borrow::Cow (13,282 samples, 4.89%)</title><rect x="67.6540%" y="261" width="4.8873%" height="15" fill="rgb(234,36,40)" fg:x="183862" fg:w="13282"/><text x="67.9040%" y="271.50">rs-1br..</text></g><g><title>rs-1brc.exe`alloc::borrow::impl$7::eq(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;*, enum2$&lt;alloc::borrow::Cow (13,067 samples, 4.81%)</title><rect x="67.7331%" y="245" width="4.8081%" height="15" fill="rgb(213,64,8)" fg:x="184077" fg:w="13067"/><text x="67.9831%" y="255.50">rs-1br..</text></g><g><title>rs-1brc.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (13,067 samples, 4.81%)</title><rect x="67.7331%" y="229" width="4.8081%" height="15" fill="rgb(210,75,36)" fg:x="184077" fg:w="13067"/><text x="67.9831%" y="239.50">rs-1br..</text></g><g><title>rs-1brc.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (13,067 samples, 4.81%)</title><rect x="67.7331%" y="213" width="4.8081%" height="15" fill="rgb(229,88,21)" fg:x="184077" fg:w="13067"/><text x="67.9831%" y="223.50">rs-1br..</text></g><g><title>rs-1brc.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (13,067 samples, 4.81%)</title><rect x="67.7331%" y="197" width="4.8081%" height="15" fill="rgb(252,204,47)" fg:x="184077" fg:w="13067"/><text x="67.9831%" y="207.50">rs-1br..</text></g><g><title>rs-1brc.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (13,067 samples, 4.81%)</title><rect x="67.7331%" y="181" width="4.8081%" height="15" fill="rgb(208,77,27)" fg:x="184077" fg:w="13067"/><text x="67.9831%" y="191.50">rs-1br..</text></g><g><title>rs-1brc.exe`memcmp (464 samples, 0.17%)</title><rect x="72.3706%" y="165" width="0.1707%" height="15" fill="rgb(221,76,26)" fg:x="196680" fg:w="464"/><text x="72.6206%" y="175.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow (13,934 samples, 5.13%)</title><rect x="67.6540%" y="309" width="5.1272%" height="15" fill="rgb(225,139,18)" fg:x="183862" fg:w="13934"/><text x="67.9040%" y="319.50">rs-1br..</text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (652 samples, 0.24%)</title><rect x="72.5413%" y="293" width="0.2399%" height="15" fill="rgb(230,137,11)" fg:x="197144" fg:w="652"/><text x="72.7913%" y="303.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::Bucket&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow (650 samples, 0.24%)</title><rect x="72.5420%" y="277" width="0.2392%" height="15" fill="rgb(212,28,1)" fg:x="197146" fg:w="650"/><text x="72.7920%" y="287.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;enum2$&lt;alloc::borrow::Cow (650 samples, 0.24%)</title><rect x="72.5420%" y="261" width="0.2392%" height="15" fill="rgb(248,164,17)" fg:x="197146" fg:w="650"/><text x="72.7920%" y="271.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::load (640 samples, 0.24%)</title><rect x="72.7812%" y="309" width="0.2355%" height="15" fill="rgb(222,171,42)" fg:x="197796" fg:w="640"/><text x="73.0312%" y="319.50"></text></g><g><title>rs-1brc.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (640 samples, 0.24%)</title><rect x="72.7812%" y="293" width="0.2355%" height="15" fill="rgb(243,84,45)" fg:x="197796" fg:w="640"/><text x="73.0312%" y="303.50"></text></g><g><title>rs-1brc.exe`core::intrinsics::copy_nonoverlapping (640 samples, 0.24%)</title><rect x="72.7812%" y="277" width="0.2355%" height="15" fill="rgb(252,49,23)" fg:x="197796" fg:w="640"/><text x="73.0312%" y="287.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::match_byte (475 samples, 0.17%)</title><rect x="73.0167%" y="309" width="0.1748%" height="15" fill="rgb(215,19,7)" fg:x="198436" fg:w="475"/><text x="73.2667%" y="319.50"></text></g><g><title>rs-1brc.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (475 samples, 0.17%)</title><rect x="73.0167%" y="293" width="0.1748%" height="15" fill="rgb(238,81,41)" fg:x="198436" fg:w="475"/><text x="73.2667%" y="303.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;(enum2$&lt;alloc::borrow::Cow (40,881 samples, 15.04%)</title><rect x="58.1739%" y="357" width="15.0426%" height="15" fill="rgb(210,199,37)" fg:x="158098" fg:w="40881"/><text x="58.4239%" y="367.50">rs-1brc.exe`hashbrown::..</text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow (18,672 samples, 6.87%)</title><rect x="66.3459%" y="341" width="6.8706%" height="15" fill="rgb(244,192,49)" fg:x="180307" fg:w="18672"/><text x="66.5959%" y="351.50">rs-1brc.e..</text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (18,396 samples, 6.77%)</title><rect x="66.4475%" y="325" width="6.7690%" height="15" fill="rgb(226,211,11)" fg:x="180583" fg:w="18396"/><text x="66.6975%" y="335.50">rs-1brc.e..</text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::match_empty (68 samples, 0.03%)</title><rect x="73.1915%" y="309" width="0.0250%" height="15" fill="rgb(236,162,54)" fg:x="198911" fg:w="68"/><text x="73.4415%" y="319.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::match_byte (68 samples, 0.03%)</title><rect x="73.1915%" y="293" width="0.0250%" height="15" fill="rgb(220,229,9)" fg:x="198911" fg:w="68"/><text x="73.4415%" y="303.50"></text></g><g><title>rs-1brc.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (68 samples, 0.03%)</title><rect x="73.1915%" y="277" width="0.0250%" height="15" fill="rgb(250,87,22)" fg:x="198911" fg:w="68"/><text x="73.4415%" y="287.50"></text></g><g><title>rs-1brc.exe`core::f64::impl$0::max (421 samples, 0.15%)</title><rect x="73.6183%" y="341" width="0.1549%" height="15" fill="rgb(239,43,17)" fg:x="200071" fg:w="421"/><text x="73.8683%" y="351.50"></text></g><g><title>rs-1brc.exe`enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;::and_modify(enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (47,038 samples, 17.31%)</title><rect x="56.8231%" y="373" width="17.3081%" height="15" fill="rgb(231,177,25)" fg:x="154427" fg:w="47038"/><text x="57.0731%" y="383.50">rs-1brc.exe`enum2$&lt;hashbrow..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::run::closure$1::closure$0 (2,486 samples, 0.91%)</title><rect x="73.2165%" y="357" width="0.9148%" height="15" fill="rgb(219,179,1)" fg:x="198979" fg:w="2486"/><text x="73.4665%" y="367.50"></text></g><g><title>rs-1brc.exe`core::f64::impl$0::min (973 samples, 0.36%)</title><rect x="73.7732%" y="341" width="0.3580%" height="15" fill="rgb(238,219,53)" fg:x="200492" fg:w="973"/><text x="74.0232%" y="351.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::OccupiedEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::into_mut(hashbrown::map::OccupiedEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (105 samples, 0.04%)</title><rect x="74.1312%" y="357" width="0.0386%" height="15" fill="rgb(232,167,36)" fg:x="201465" fg:w="105"/><text x="74.3812%" y="367.50"></text></g><g><title>rs-1brc.exe`core::ptr::drop_in_place(hashbrown::map::OccupiedEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (105 samples, 0.04%)</title><rect x="74.1312%" y="341" width="0.0386%" height="15" fill="rgb(244,19,51)" fg:x="201465" fg:w="105"/><text x="74.3812%" y="351.50"></text></g><g><title>rs-1brc.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow (105 samples, 0.04%)</title><rect x="74.1312%" y="325" width="0.0386%" height="15" fill="rgb(224,6,22)" fg:x="201465" fg:w="105"/><text x="74.3812%" y="335.50"></text></g><g><title>rs-1brc.exe`enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;::or_insert_with(enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (172 samples, 0.06%)</title><rect x="74.1312%" y="373" width="0.0633%" height="15" fill="rgb(224,145,5)" fg:x="201465" fg:w="172"/><text x="74.3812%" y="383.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::VacantEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::insert(hashbrown::map::VacantEntry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (67 samples, 0.02%)</title><rect x="74.1699%" y="357" width="0.0247%" height="15" fill="rgb(234,130,49)" fg:x="201570" fg:w="67"/><text x="74.4199%" y="367.50"></text></g><g><title>rs-1brc.exe`core::core_simd::masks::Mask&lt;i8,32&gt;::first_set(core::core_simd::masks::Mask (22,893 samples, 8.42%)</title><rect x="75.4537%" y="357" width="8.4237%" height="15" fill="rgb(254,6,2)" fg:x="205059" fg:w="22893"/><text x="75.7037%" y="367.50">rs-1brc.exe`..</text></g><g><title>rs-1brc.exe`core::core_simd::masks::Mask&lt;i8,32&gt;::to_bitmask(core::core_simd::masks::Mask (22,231 samples, 8.18%)</title><rect x="75.6973%" y="341" width="8.1801%" height="15" fill="rgb(208,96,46)" fg:x="205721" fg:w="22231"/><text x="75.9473%" y="351.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`core::core_simd::masks::mask_impl::Mask&lt;i8,32&gt;::to_bitmask_integer(core::core_simd::masks::mask_impl::Mask (22,231 samples, 8.18%)</title><rect x="75.6973%" y="325" width="8.1801%" height="15" fill="rgb(239,3,39)" fg:x="205721" fg:w="22231"/><text x="75.9473%" y="335.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`core::core_simd::masks::mask_impl::Mask&lt;i8,32&gt;::to_bitmask_impl(core::core_simd::masks::mask_impl::Mask (22,231 samples, 8.18%)</title><rect x="75.6973%" y="309" width="8.1801%" height="15" fill="rgb(233,210,1)" fg:x="205721" fg:w="22231"/><text x="75.9473%" y="319.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::Range (1,872 samples, 0.69%)</title><rect x="83.8774%" y="357" width="0.6888%" height="15" fill="rgb(244,137,37)" fg:x="227952" fg:w="1872"/><text x="84.1274%" y="367.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (1,872 samples, 0.69%)</title><rect x="83.8774%" y="341" width="0.6888%" height="15" fill="rgb(240,136,2)" fg:x="227952" fg:w="1872"/><text x="84.1274%" y="351.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::RangeFrom (58 samples, 0.02%)</title><rect x="84.5662%" y="357" width="0.0213%" height="15" fill="rgb(239,18,37)" fg:x="229824" fg:w="58"/><text x="84.8162%" y="367.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$6::index(core::ops::range::RangeFrom&lt;usize&gt;, ref$&lt;slice2$ (58 samples, 0.02%)</title><rect x="84.5662%" y="341" width="0.0213%" height="15" fill="rgb(218,185,22)" fg:x="229824" fg:w="58"/><text x="84.8162%" y="351.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$6::get_unchecked(core::ops::range::RangeFrom&lt;usize&gt;, ptr_const$&lt;slice2$ (58 samples, 0.02%)</title><rect x="84.5662%" y="325" width="0.0213%" height="15" fill="rgb(225,218,4)" fg:x="229824" fg:w="58"/><text x="84.8162%" y="335.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$4::get_unchecked(core::ops::range::Range&lt;usize&gt;, ptr_const$&lt;slice2$ (58 samples, 0.02%)</title><rect x="84.5662%" y="309" width="0.0213%" height="15" fill="rgb(230,182,32)" fg:x="229824" fg:w="58"/><text x="84.8162%" y="319.50"></text></g><g><title>rs-1brc.exe`core::ptr::const_ptr::impl$0::add (58 samples, 0.02%)</title><rect x="84.5662%" y="293" width="0.0213%" height="15" fill="rgb(242,56,43)" fg:x="229824" fg:w="58"/><text x="84.8162%" y="303.50"></text></g><g><title>`0x7FFCAAEA10C0 (78 samples, 0.03%)</title><rect x="88.0438%" y="325" width="0.0287%" height="15" fill="rgb(233,99,24)" fg:x="239275" fg:w="78"/><text x="88.2938%" y="335.50"></text></g><g><title>`0x7FFCAAEA10C3 (75 samples, 0.03%)</title><rect x="88.0725%" y="325" width="0.0276%" height="15" fill="rgb(234,209,42)" fg:x="239353" fg:w="75"/><text x="88.3225%" y="335.50"></text></g><g><title>`0x7FFCAAEA10CA (49 samples, 0.02%)</title><rect x="88.1001%" y="325" width="0.0180%" height="15" fill="rgb(227,7,12)" fg:x="239428" fg:w="49"/><text x="88.3501%" y="335.50"></text></g><g><title>`0x7FFCAAEA10CE (81 samples, 0.03%)</title><rect x="88.1182%" y="325" width="0.0298%" height="15" fill="rgb(245,203,43)" fg:x="239477" fg:w="81"/><text x="88.3682%" y="335.50"></text></g><g><title>`0x7FFCAAEA11E4 (3,271 samples, 1.20%)</title><rect x="88.1483%" y="325" width="1.2036%" height="15" fill="rgb(238,205,33)" fg:x="239559" fg:w="3271"/><text x="88.3983%" y="335.50"></text></g><g><title>`0x7FFCAAEA11E6 (50 samples, 0.02%)</title><rect x="89.3519%" y="325" width="0.0184%" height="15" fill="rgb(231,56,7)" fg:x="242830" fg:w="50"/><text x="89.6019%" y="335.50"></text></g><g><title>`0x7FFCAAEA11EA (1,785 samples, 0.66%)</title><rect x="89.3703%" y="325" width="0.6568%" height="15" fill="rgb(244,186,29)" fg:x="242880" fg:w="1785"/><text x="89.6203%" y="335.50"></text></g><g><title>`0x7FFCAAEA11F1 (594 samples, 0.22%)</title><rect x="90.0272%" y="325" width="0.2186%" height="15" fill="rgb(234,111,31)" fg:x="244665" fg:w="594"/><text x="90.2772%" y="335.50"></text></g><g><title>`0x7FFCAAEA11F5 (208 samples, 0.08%)</title><rect x="90.2457%" y="325" width="0.0765%" height="15" fill="rgb(241,149,10)" fg:x="245259" fg:w="208"/><text x="90.4957%" y="335.50"></text></g><g><title>`0x7FFCAAEA11FC (1,669 samples, 0.61%)</title><rect x="90.3223%" y="325" width="0.6141%" height="15" fill="rgb(249,206,44)" fg:x="245467" fg:w="1669"/><text x="90.5723%" y="335.50"></text></g><g><title>`0x7FFCAAEA2010 (154 samples, 0.06%)</title><rect x="90.9364%" y="325" width="0.0567%" height="15" fill="rgb(251,153,30)" fg:x="247136" fg:w="154"/><text x="91.1864%" y="335.50"></text></g><g><title>rs-1brc.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (133,229 samples, 49.02%)</title><rect x="43.0327%" y="485" width="49.0231%" height="15" fill="rgb(239,152,38)" fg:x="116949" fg:w="133229"/><text x="43.2827%" y="495.50">rs-1brc.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon:..</text></g><g><title>rs-1brc.exe`rayon::iter::reduce::impl$5::complete(rayon::iter::reduce::ReduceFolder&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (133,229 samples, 49.02%)</title><rect x="43.0327%" y="469" width="49.0231%" height="15" fill="rgb(249,139,47)" fg:x="116949" fg:w="133229"/><text x="43.2827%" y="479.50">rs-1brc.exe`rayon::iter::reduce::impl$5::complete(rayon::iter::reduce::ReduceFold..</text></g><g><title>rs-1brc.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::slice::iter::Iter&lt;usize&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$2&gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;usize&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt; &gt;, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (133,229 samples, 49.02%)</title><rect x="43.0327%" y="453" width="49.0231%" height="15" fill="rgb(244,64,35)" fg:x="116949" fg:w="133229"/><text x="43.2827%" y="463.50">rs-1brc.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::HashMap&lt;enum2..</text></g><g><title>rs-1brc.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;usize&gt;, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;usize&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,ref$ (133,229 samples, 49.02%)</title><rect x="43.0327%" y="437" width="49.0231%" height="15" fill="rgb(216,46,15)" fg:x="116949" fg:w="133229"/><text x="43.2827%" y="447.50">rs-1brc.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;usize&gt;, has..</text></g><g><title>rs-1brc.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;usize&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$2&gt; &gt;*, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (133,229 samples, 49.02%)</title><rect x="43.0327%" y="421" width="49.0231%" height="15" fill="rgb(250,74,19)" fg:x="116949" fg:w="133229"/><text x="43.2827%" y="431.50">rs-1brc.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::..</text></g><g><title>rs-1brc.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;usize&gt; &gt;,rs_1brc::approach_3::run::closure_env$1&gt; (133,229 samples, 49.02%)</title><rect x="43.0327%" y="405" width="49.0231%" height="15" fill="rgb(249,42,33)" fg:x="116949" fg:w="133229"/><text x="43.2827%" y="415.50">rs-1brc.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;usize&gt; &gt;,rs_..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::run::closure$1 (133,229 samples, 49.02%)</title><rect x="43.0327%" y="389" width="49.0231%" height="15" fill="rgb(242,149,17)" fg:x="116949" fg:w="133229"/><text x="43.2827%" y="399.50">rs-1brc.exe`rs_1brc::approach_3::run::closure$1</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::next (48,541 samples, 17.86%)</title><rect x="74.1945%" y="373" width="17.8612%" height="15" fill="rgb(244,29,21)" fg:x="201637" fg:w="48541"/><text x="74.4445%" y="383.50">rs-1brc.exe`rs_1brc::approac..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::fill_by_slice(ref$&lt;slice2$ (20,296 samples, 7.47%)</title><rect x="84.5876%" y="357" width="7.4681%" height="15" fill="rgb(220,130,37)" fg:x="229882" fg:w="20296"/><text x="84.8376%" y="367.50">rs-1brc.ex..</text></g><g><title>rs-1brc.exe`core::intrinsics::copy_nonoverlapping (19,890 samples, 7.32%)</title><rect x="84.7370%" y="341" width="7.3187%" height="15" fill="rgb(211,67,2)" fg:x="230288" fg:w="19890"/><text x="84.9870%" y="351.50">rs-1brc.ex..</text></g><g><title>rs-1brc.exe`memcpy (2,888 samples, 1.06%)</title><rect x="90.9931%" y="325" width="1.0627%" height="15" fill="rgb(235,68,52)" fg:x="247290" fg:w="2888"/><text x="91.2431%" y="335.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::float::impl$1::from_u64 (135 samples, 0.05%)</title><rect x="92.4763%" y="229" width="0.0497%" height="15" fill="rgb(246,142,3)" fg:x="251321" fg:w="135"/><text x="92.7263%" y="239.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::number::Number::is_fast_path (82 samples, 0.03%)</title><rect x="92.5263%" y="229" width="0.0302%" height="15" fill="rgb(241,25,7)" fg:x="251457" fg:w="82"/><text x="92.7763%" y="239.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::number::Number::try_fast_path (371 samples, 0.14%)</title><rect x="92.4708%" y="245" width="0.1365%" height="15" fill="rgb(242,119,39)" fg:x="251306" fg:w="371"/><text x="92.7208%" y="255.50"></text></g><g><title>rs-1brc.exe`core::ops::arith::impl$217::div (138 samples, 0.05%)</title><rect x="92.5565%" y="229" width="0.0508%" height="15" fill="rgb(241,98,45)" fg:x="251539" fg:w="138"/><text x="92.8065%" y="239.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::try_parse_digits::closure$0 (131 samples, 0.05%)</title><rect x="94.0423%" y="181" width="0.0482%" height="15" fill="rgb(254,28,30)" fg:x="255577" fg:w="131"/><text x="94.2923%" y="191.50"></text></g><g><title>rs-1brc.exe`core::num::impl$9::wrapping_mul (64 samples, 0.02%)</title><rect x="94.0670%" y="165" width="0.0235%" height="15" fill="rgb(241,142,54)" fg:x="255644" fg:w="64"/><text x="94.3170%" y="175.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::try_parse_digits (2,883 samples, 1.06%)</title><rect x="93.1901%" y="213" width="1.0608%" height="15" fill="rgb(222,85,15)" fg:x="253261" fg:w="2883"/><text x="93.4401%" y="223.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::common::impl$0::parse_digits (2,619 samples, 0.96%)</title><rect x="93.2873%" y="197" width="0.9637%" height="15" fill="rgb(210,85,47)" fg:x="253525" fg:w="2619"/><text x="93.5373%" y="207.50"></text></g><g><title>rs-1brc.exe`core::num::impl$6::wrapping_sub (436 samples, 0.16%)</title><rect x="94.0905%" y="181" width="0.1604%" height="15" fill="rgb(224,206,25)" fg:x="255708" fg:w="436"/><text x="94.3405%" y="191.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::parse_number (4,605 samples, 1.69%)</title><rect x="92.6073%" y="245" width="1.6945%" height="15" fill="rgb(243,201,19)" fg:x="251677" fg:w="4605"/><text x="92.8573%" y="255.50"></text></g><g><title>rs-1brc.exe`core::num::dec2flt::parse::parse_partial_number (3,366 samples, 1.24%)</title><rect x="93.0632%" y="229" width="1.2386%" height="15" fill="rgb(236,59,4)" fg:x="252916" fg:w="3366"/><text x="93.3132%" y="239.50"></text></g><g><title>rs-1brc.exe`core::slice::impl$0::split_first (138 samples, 0.05%)</title><rect x="94.2510%" y="213" width="0.0508%" height="15" fill="rgb(254,179,45)" fg:x="256144" fg:w="138"/><text x="94.5010%" y="223.50"></text></g><g><title>rs-1brc.exe`core::str::impl$0::parse(ref$ (5,806 samples, 2.14%)</title><rect x="92.1687%" y="293" width="2.1364%" height="15" fill="rgb(226,14,10)" fg:x="250485" fg:w="5806"/><text x="92.4187%" y="303.50">r..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::impl$3::from_str (5,736 samples, 2.11%)</title><rect x="92.1944%" y="277" width="2.1106%" height="15" fill="rgb(244,27,41)" fg:x="250555" fg:w="5736"/><text x="92.4444%" y="287.50">r..</text></g><g><title>rs-1brc.exe`core::num::dec2flt::dec2flt (5,378 samples, 1.98%)</title><rect x="92.3262%" y="261" width="1.9789%" height="15" fill="rgb(235,35,32)" fg:x="250913" fg:w="5378"/><text x="92.5762%" y="271.50">r..</text></g><g><title>rs-1brc.exe`enum2$&lt;core::result::Result&lt;f64,core::num::dec2flt::ParseFloatError&gt; &gt;::unwrap(enum2$&lt;core::result::Result (34 samples, 0.01%)</title><rect x="94.3051%" y="293" width="0.0125%" height="15" fill="rgb(218,68,31)" fg:x="256291" fg:w="34"/><text x="94.5551%" y="303.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::finish (58 samples, 0.02%)</title><rect x="95.0174%" y="245" width="0.0213%" height="15" fill="rgb(207,120,37)" fg:x="258227" fg:w="58"/><text x="95.2674%" y="255.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (58 samples, 0.02%)</title><rect x="95.0174%" y="229" width="0.0213%" height="15" fill="rgb(227,98,0)" fg:x="258227" fg:w="58"/><text x="95.2674%" y="239.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (549 samples, 0.20%)</title><rect x="95.2997%" y="165" width="0.2020%" height="15" fill="rgb(207,7,3)" fg:x="258994" fg:w="549"/><text x="95.5497%" y="175.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (178 samples, 0.07%)</title><rect x="95.4362%" y="149" width="0.0655%" height="15" fill="rgb(206,98,19)" fg:x="259365" fg:w="178"/><text x="95.6862%" y="159.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::AHasher::large_update (672 samples, 0.25%)</title><rect x="95.2559%" y="181" width="0.2473%" height="15" fill="rgb(217,5,26)" fg:x="258875" fg:w="672"/><text x="95.5059%" y="191.50"></text></g><g><title>rs-1brc.exe`ahash::operations::read_small(ref$&lt;slice2$ (900 samples, 0.33%)</title><rect x="95.5031%" y="181" width="0.3312%" height="15" fill="rgb(235,190,38)" fg:x="259547" fg:w="900"/><text x="95.7531%" y="191.50"></text></g><g><title>rs-1brc.exe`ahash::convert::impl$0::read_last_u32(ref$&lt;slice2$ (524 samples, 0.19%)</title><rect x="95.6415%" y="165" width="0.1928%" height="15" fill="rgb(247,86,24)" fg:x="259923" fg:w="524"/><text x="95.8915%" y="175.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::write(ahash::fallback_hash::AHasher*, ref$&lt;slice2$ (2,391 samples, 0.88%)</title><rect x="95.0388%" y="197" width="0.8798%" height="15" fill="rgb(205,101,16)" fg:x="258285" fg:w="2391"/><text x="95.2888%" y="207.50"></text></g><g><title>rs-1brc.exe`core::num::impl$9::wrapping_mul (229 samples, 0.08%)</title><rect x="95.8343%" y="181" width="0.0843%" height="15" fill="rgb(246,168,33)" fg:x="260447" fg:w="229"/><text x="96.0843%" y="191.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::make_hash(core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;*, enum2$&lt;alloc::borrow::Cow (2,512 samples, 0.92%)</title><rect x="95.0174%" y="261" width="0.9243%" height="15" fill="rgb(231,114,1)" fg:x="258227" fg:w="2512"/><text x="95.2674%" y="271.50"></text></g><g><title>rs-1brc.exe`alloc::borrow::impl$12::hash(enum2$&lt;alloc::borrow::Cow (2,454 samples, 0.90%)</title><rect x="95.0388%" y="245" width="0.9030%" height="15" fill="rgb(207,184,53)" fg:x="258285" fg:w="2454"/><text x="95.2888%" y="255.50"></text></g><g><title>rs-1brc.exe`core::hash::impls::impl$2::hash(ref$ (2,454 samples, 0.90%)</title><rect x="95.0388%" y="229" width="0.9030%" height="15" fill="rgb(224,95,51)" fg:x="258285" fg:w="2454"/><text x="95.2888%" y="239.50"></text></g><g><title>rs-1brc.exe`core::hash::Hasher::write_str(ahash::fallback_hash::AHasher*, ref$ (2,454 samples, 0.90%)</title><rect x="95.0388%" y="213" width="0.9030%" height="15" fill="rgb(212,188,45)" fg:x="258285" fg:w="2454"/><text x="95.2888%" y="223.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::impl$1::write_u8 (63 samples, 0.02%)</title><rect x="95.9186%" y="197" width="0.0232%" height="15" fill="rgb(223,154,38)" fg:x="260676" fg:w="63"/><text x="96.1686%" y="207.50"></text></g><g><title>rs-1brc.exe`ahash::fallback_hash::AHasher::update (63 samples, 0.02%)</title><rect x="95.9186%" y="181" width="0.0232%" height="15" fill="rgb(251,22,52)" fg:x="260676" fg:w="63"/><text x="96.1686%" y="191.50"></text></g><g><title>rs-1brc.exe`ahash::operations::folded_multiply (55 samples, 0.02%)</title><rect x="95.9215%" y="165" width="0.0202%" height="15" fill="rgb(229,209,22)" fg:x="260684" fg:w="55"/><text x="96.1715%" y="175.50"></text></g><g><title>rs-1brc.exe`core::num::impl$10::wrapping_mul (33 samples, 0.01%)</title><rect x="95.9296%" y="149" width="0.0121%" height="15" fill="rgb(234,138,34)" fg:x="260706" fg:w="33"/><text x="96.1796%" y="159.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (47 samples, 0.02%)</title><rect x="95.9418%" y="245" width="0.0173%" height="15" fill="rgb(212,95,11)" fg:x="260739" fg:w="47"/><text x="96.1918%" y="255.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::Bucket&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow (47 samples, 0.02%)</title><rect x="95.9418%" y="229" width="0.0173%" height="15" fill="rgb(240,179,47)" fg:x="260739" fg:w="47"/><text x="96.1918%" y="239.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;enum2$&lt;alloc::borrow::Cow (47 samples, 0.02%)</title><rect x="95.9418%" y="213" width="0.0173%" height="15" fill="rgb(240,163,11)" fg:x="260739" fg:w="47"/><text x="96.1918%" y="223.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;enum2$&lt;alloc::borrow::Cow (47 samples, 0.02%)</title><rect x="95.9418%" y="197" width="0.0173%" height="15" fill="rgb(236,37,12)" fg:x="260739" fg:w="47"/><text x="96.1918%" y="207.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTableInner::probe_seq (217 samples, 0.08%)</title><rect x="95.9863%" y="229" width="0.0798%" height="15" fill="rgb(232,164,16)" fg:x="260860" fg:w="217"/><text x="96.2363%" y="239.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::bitmask::impl$3::next (146 samples, 0.05%)</title><rect x="96.0661%" y="229" width="0.0537%" height="15" fill="rgb(244,205,15)" fg:x="261077" fg:w="146"/><text x="96.3161%" y="239.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (146 samples, 0.05%)</title><rect x="96.0661%" y="213" width="0.0537%" height="15" fill="rgb(223,117,47)" fg:x="261077" fg:w="146"/><text x="96.3161%" y="223.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::h2 (52 samples, 0.02%)</title><rect x="96.1199%" y="229" width="0.0191%" height="15" fill="rgb(244,107,35)" fg:x="261223" fg:w="52"/><text x="96.3699%" y="239.50"></text></g><g><title>`0x7FFCAAEA0FC0 (31 samples, 0.01%)</title><rect x="96.2972%" y="85" width="0.0114%" height="15" fill="rgb(205,140,8)" fg:x="261705" fg:w="31"/><text x="96.5472%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FC3 (36 samples, 0.01%)</title><rect x="96.3086%" y="85" width="0.0132%" height="15" fill="rgb(228,84,46)" fg:x="261736" fg:w="36"/><text x="96.5586%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FCC (33 samples, 0.01%)</title><rect x="96.3270%" y="85" width="0.0121%" height="15" fill="rgb(254,188,9)" fg:x="261786" fg:w="33"/><text x="96.5770%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FD2 (58 samples, 0.02%)</title><rect x="96.3403%" y="85" width="0.0213%" height="15" fill="rgb(206,112,54)" fg:x="261822" fg:w="58"/><text x="96.5903%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FD5 (197 samples, 0.07%)</title><rect x="96.3616%" y="85" width="0.0725%" height="15" fill="rgb(216,84,49)" fg:x="261880" fg:w="197"/><text x="96.6116%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FDA (55 samples, 0.02%)</title><rect x="96.4341%" y="85" width="0.0202%" height="15" fill="rgb(214,194,35)" fg:x="262077" fg:w="55"/><text x="96.6841%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FE0 (56 samples, 0.02%)</title><rect x="96.4547%" y="85" width="0.0206%" height="15" fill="rgb(249,28,3)" fg:x="262133" fg:w="56"/><text x="96.7047%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FE5 (60 samples, 0.02%)</title><rect x="96.4753%" y="85" width="0.0221%" height="15" fill="rgb(222,56,52)" fg:x="262189" fg:w="60"/><text x="96.7253%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FEE (45 samples, 0.02%)</title><rect x="96.4992%" y="85" width="0.0166%" height="15" fill="rgb(245,217,50)" fg:x="262254" fg:w="45"/><text x="96.7492%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FF2 (248 samples, 0.09%)</title><rect x="96.5158%" y="85" width="0.0913%" height="15" fill="rgb(213,201,24)" fg:x="262299" fg:w="248"/><text x="96.7658%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FF5 (217 samples, 0.08%)</title><rect x="96.6070%" y="85" width="0.0798%" height="15" fill="rgb(248,116,28)" fg:x="262547" fg:w="217"/><text x="96.8570%" y="95.50"></text></g><g><title>`0x7FFCAAEA0FFA (175 samples, 0.06%)</title><rect x="96.6869%" y="85" width="0.0644%" height="15" fill="rgb(219,72,43)" fg:x="262764" fg:w="175"/><text x="96.9369%" y="95.50"></text></g><g><title>`0x7FFCAAEA1002 (104 samples, 0.04%)</title><rect x="96.7516%" y="85" width="0.0383%" height="15" fill="rgb(209,138,14)" fg:x="262940" fg:w="104"/><text x="97.0016%" y="95.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;*, tuple$&lt;enum2$&lt;alloc::borrow::Cow (1,915 samples, 0.70%)</title><rect x="96.1390%" y="213" width="0.7046%" height="15" fill="rgb(222,18,33)" fg:x="261275" fg:w="1915"/><text x="96.3890%" y="223.50"></text></g><g><title>rs-1brc.exe`hashbrown::impl$0::equivalent(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;*, enum2$&lt;alloc::borrow::Cow (1,915 samples, 0.70%)</title><rect x="96.1390%" y="197" width="0.7046%" height="15" fill="rgb(213,199,7)" fg:x="261275" fg:w="1915"/><text x="96.3890%" y="207.50"></text></g><g><title>rs-1brc.exe`core::cmp::impls::impl$9::eq(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;**, enum2$&lt;alloc::borrow::Cow (1,915 samples, 0.70%)</title><rect x="96.1390%" y="181" width="0.7046%" height="15" fill="rgb(250,110,10)" fg:x="261275" fg:w="1915"/><text x="96.3890%" y="191.50"></text></g><g><title>rs-1brc.exe`alloc::borrow::impl$7::eq(enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;*, enum2$&lt;alloc::borrow::Cow (1,895 samples, 0.70%)</title><rect x="96.1463%" y="165" width="0.6973%" height="15" fill="rgb(248,123,6)" fg:x="261295" fg:w="1895"/><text x="96.3963%" y="175.50"></text></g><g><title>rs-1brc.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (1,895 samples, 0.70%)</title><rect x="96.1463%" y="149" width="0.6973%" height="15" fill="rgb(206,91,31)" fg:x="261295" fg:w="1895"/><text x="96.3963%" y="159.50"></text></g><g><title>rs-1brc.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (1,895 samples, 0.70%)</title><rect x="96.1463%" y="133" width="0.6973%" height="15" fill="rgb(211,154,13)" fg:x="261295" fg:w="1895"/><text x="96.3963%" y="143.50"></text></g><g><title>rs-1brc.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1,895 samples, 0.70%)</title><rect x="96.1463%" y="117" width="0.6973%" height="15" fill="rgb(225,148,7)" fg:x="261295" fg:w="1895"/><text x="96.3963%" y="127.50"></text></g><g><title>rs-1brc.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1,895 samples, 0.70%)</title><rect x="96.1463%" y="101" width="0.6973%" height="15" fill="rgb(220,160,43)" fg:x="261295" fg:w="1895"/><text x="96.3963%" y="111.50"></text></g><g><title>rs-1brc.exe`memcmp (78 samples, 0.03%)</title><rect x="96.8149%" y="85" width="0.0287%" height="15" fill="rgb(213,52,39)" fg:x="263112" fg:w="78"/><text x="97.0649%" y="95.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global,hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow (2,022 samples, 0.74%)</title><rect x="96.1390%" y="229" width="0.7440%" height="15" fill="rgb(243,137,7)" fg:x="261275" fg:w="2022"/><text x="96.3890%" y="239.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::bucket (107 samples, 0.04%)</title><rect x="96.8436%" y="213" width="0.0394%" height="15" fill="rgb(230,79,13)" fg:x="263190" fg:w="107"/><text x="97.0936%" y="223.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::Bucket&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow (107 samples, 0.04%)</title><rect x="96.8436%" y="197" width="0.0394%" height="15" fill="rgb(247,105,23)" fg:x="263190" fg:w="107"/><text x="97.0936%" y="207.50"></text></g><g><title>rs-1brc.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;enum2$&lt;alloc::borrow::Cow (107 samples, 0.04%)</title><rect x="96.8436%" y="181" width="0.0394%" height="15" fill="rgb(223,179,41)" fg:x="263190" fg:w="107"/><text x="97.0936%" y="191.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::load (106 samples, 0.04%)</title><rect x="96.8830%" y="229" width="0.0390%" height="15" fill="rgb(218,9,34)" fg:x="263297" fg:w="106"/><text x="97.1330%" y="239.50"></text></g><g><title>rs-1brc.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (106 samples, 0.04%)</title><rect x="96.8830%" y="213" width="0.0390%" height="15" fill="rgb(222,106,8)" fg:x="263297" fg:w="106"/><text x="97.1330%" y="223.50"></text></g><g><title>rs-1brc.exe`core::intrinsics::copy_nonoverlapping (106 samples, 0.04%)</title><rect x="96.8830%" y="197" width="0.0390%" height="15" fill="rgb(211,220,0)" fg:x="263297" fg:w="106"/><text x="97.1330%" y="207.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::sse2::Group::match_byte (64 samples, 0.02%)</title><rect x="96.9220%" y="229" width="0.0235%" height="15" fill="rgb(229,52,16)" fg:x="263403" fg:w="64"/><text x="97.1720%" y="239.50"></text></g><g><title>rs-1brc.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (64 samples, 0.02%)</title><rect x="96.9220%" y="213" width="0.0235%" height="15" fill="rgb(212,155,18)" fg:x="263403" fg:w="64"/><text x="97.1720%" y="223.50"></text></g><g><title>rs-1brc.exe`hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;::entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;(enum2$&lt;alloc::borrow::Cow (6,707 samples, 2.47%)</title><rect x="94.4824%" y="277" width="2.4679%" height="15" fill="rgb(242,21,14)" fg:x="256773" fg:w="6707"/><text x="94.7324%" y="287.50">rs..</text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data&gt;,allocator_api2::stable::alloc::global::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,enum2$&lt;alloc::borrow::Cow (2,741 samples, 1.01%)</title><rect x="95.9418%" y="261" width="1.0086%" height="15" fill="rgb(222,19,48)" fg:x="260739" fg:w="2741"/><text x="96.1918%" y="271.50"></text></g><g><title>rs-1brc.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (2,694 samples, 0.99%)</title><rect x="95.9591%" y="245" width="0.9913%" height="15" fill="rgb(232,45,27)" fg:x="260786" fg:w="2694"/><text x="96.2091%" y="255.50"></text></g><g><title>rs-1brc.exe`core::f64::impl$0::max (67 samples, 0.02%)</title><rect x="97.0129%" y="261" width="0.0247%" height="15" fill="rgb(249,103,42)" fg:x="263650" fg:w="67"/><text x="97.2629%" y="271.50"></text></g><g><title>rs-1brc.exe`enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;::and_modify(enum2$&lt;hashbrown::map::Entry&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (7,543 samples, 2.78%)</title><rect x="94.3176%" y="293" width="2.7755%" height="15" fill="rgb(246,81,33)" fg:x="256325" fg:w="7543"/><text x="94.5676%" y="303.50">rs..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::run::closure$1::closure$0 (388 samples, 0.14%)</title><rect x="96.9503%" y="277" width="0.1428%" height="15" fill="rgb(252,33,42)" fg:x="263480" fg:w="388"/><text x="97.2003%" y="287.50"></text></g><g><title>rs-1brc.exe`core::f64::impl$0::min (151 samples, 0.06%)</title><rect x="97.0375%" y="261" width="0.0556%" height="15" fill="rgb(209,212,41)" fg:x="263717" fg:w="151"/><text x="97.2875%" y="271.50"></text></g><g><title>rs-1brc.exe`core::core_simd::masks::Mask&lt;i8,32&gt;::first_set(core::core_simd::masks::Mask (3,798 samples, 1.40%)</title><rect x="97.2616%" y="277" width="1.3975%" height="15" fill="rgb(207,154,6)" fg:x="264326" fg:w="3798"/><text x="97.5116%" y="287.50"></text></g><g><title>rs-1brc.exe`core::core_simd::masks::Mask&lt;i8,32&gt;::to_bitmask(core::core_simd::masks::Mask (3,686 samples, 1.36%)</title><rect x="97.3028%" y="261" width="1.3563%" height="15" fill="rgb(223,64,47)" fg:x="264438" fg:w="3686"/><text x="97.5528%" y="271.50"></text></g><g><title>rs-1brc.exe`core::core_simd::masks::mask_impl::Mask&lt;i8,32&gt;::to_bitmask_integer(core::core_simd::masks::mask_impl::Mask (3,686 samples, 1.36%)</title><rect x="97.3028%" y="245" width="1.3563%" height="15" fill="rgb(211,161,38)" fg:x="264438" fg:w="3686"/><text x="97.5528%" y="255.50"></text></g><g><title>rs-1brc.exe`core::core_simd::masks::mask_impl::Mask&lt;i8,32&gt;::to_bitmask_impl(core::core_simd::masks::mask_impl::Mask (3,686 samples, 1.36%)</title><rect x="97.3028%" y="229" width="1.3563%" height="15" fill="rgb(219,138,40)" fg:x="264438" fg:w="3686"/><text x="97.5528%" y="239.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::Range (273 samples, 0.10%)</title><rect x="98.6592%" y="277" width="0.1005%" height="15" fill="rgb(241,228,46)" fg:x="268124" fg:w="273"/><text x="98.9092%" y="287.50"></text></g><g><title>rs-1brc.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (273 samples, 0.10%)</title><rect x="98.6592%" y="261" width="0.1005%" height="15" fill="rgb(223,209,38)" fg:x="268124" fg:w="273"/><text x="98.9092%" y="271.50"></text></g><g><title>`0x7FFCAAEA11E4 (488 samples, 0.18%)</title><rect x="99.3701%" y="245" width="0.1796%" height="15" fill="rgb(236,164,45)" fg:x="270056" fg:w="488"/><text x="99.6201%" y="255.50"></text></g><g><title>`0x7FFCAAEA11EA (315 samples, 0.12%)</title><rect x="99.5540%" y="245" width="0.1159%" height="15" fill="rgb(231,15,5)" fg:x="270556" fg:w="315"/><text x="99.8040%" y="255.50"></text></g><g><title>`0x7FFCAAEA11F1 (107 samples, 0.04%)</title><rect x="99.6699%" y="245" width="0.0394%" height="15" fill="rgb(252,35,15)" fg:x="270871" fg:w="107"/><text x="99.9199%" y="255.50"></text></g><g><title>`0x7FFCAAEA11F5 (43 samples, 0.02%)</title><rect x="99.7093%" y="245" width="0.0158%" height="15" fill="rgb(248,181,18)" fg:x="270978" fg:w="43"/><text x="99.9593%" y="255.50"></text></g><g><title>`0x7FFCAAEA11FC (278 samples, 0.10%)</title><rect x="99.7251%" y="245" width="0.1023%" height="15" fill="rgb(233,39,42)" fg:x="271021" fg:w="278"/><text x="99.9751%" y="255.50"></text></g><g><title>rs-1brc.exe`rayon_core::registry::WorkerThread::execute (271,731 samples, 99.99%)</title><rect x="0.0063%" y="677" width="99.9864%" height="15" fill="rgb(238,110,33)" fg:x="17" fg:w="271731"/><text x="0.2563%" y="687.50">rs-1brc.exe`rayon_core::registry::WorkerThread::execute</text></g><g><title>rs-1brc.exe`rayon_core::job::JobRef::execute (271,731 samples, 99.99%)</title><rect x="0.0063%" y="661" width="99.9864%" height="15" fill="rgb(233,195,10)" fg:x="17" fg:w="271731"/><text x="0.2563%" y="671.50">rs-1brc.exe`rayon_core::job::JobRef::execute</text></g><g><title>rs-1brc.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(tuple$ (232,027 samples, 85.38%)</title><rect x="14.6158%" y="645" width="85.3769%" height="15" fill="rgb(254,105,3)" fg:x="39721" fg:w="232027"/><text x="14.8658%" y="655.50">rs-1brc.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;hashbrown::map..</text></g><g><title>rs-1brc.exe`enum2$&lt;rayon_core::job::JobResult&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (232,027 samples, 85.38%)</title><rect x="14.6158%" y="629" width="85.3769%" height="15" fill="rgb(221,225,9)" fg:x="39721" fg:w="232027"/><text x="14.8658%" y="639.50">rs-1brc.exe`enum2$&lt;rayon_core::job::JobResult&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::..</text></g><g><title>rs-1brc.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (232,027 samples, 85.38%)</title><rect x="14.6158%" y="613" width="85.3769%" height="15" fill="rgb(224,227,45)" fg:x="39721" fg:w="232027"/><text x="14.8658%" y="623.50">rs-1brc.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDef..</text></g><g><title>rs-1brc.exe`std::panicking::try::do_call (232,027 samples, 85.38%)</title><rect x="14.6158%" y="597" width="85.3769%" height="15" fill="rgb(229,198,43)" fg:x="39721" fg:w="232027"/><text x="14.8658%" y="607.50">rs-1brc.exe`std::panicking::try::do_call</text></g><g><title>rs-1brc.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;usize&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (232,027 samples, 85.38%)</title><rect x="14.6158%" y="581" width="85.3769%" height="15" fill="rgb(206,209,35)" fg:x="39721" fg:w="232027"/><text x="14.8658%" y="591.50">rs-1brc.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::ite..</text></g><g><title>rs-1brc.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (154,799 samples, 56.96%)</title><rect x="43.0327%" y="565" width="56.9600%" height="15" fill="rgb(245,195,53)" fg:x="116949" fg:w="154799"/><text x="43.2827%" y="575.50">rs-1brc.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayo..</text></g><g><title>rs-1brc.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (154,799 samples, 56.96%)</title><rect x="43.0327%" y="549" width="56.9600%" height="15" fill="rgb(240,92,26)" fg:x="116949" fg:w="154799"/><text x="43.2827%" y="559.50">rs-1brc.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_c..</text></g><g><title>rs-1brc.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (154,799 samples, 56.96%)</title><rect x="43.0327%" y="533" width="56.9600%" height="15" fill="rgb(207,40,23)" fg:x="116949" fg:w="154799"/><text x="43.2827%" y="543.50">rs-1brc.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1..</text></g><g><title>rs-1brc.exe`std::panicking::try::do_call (154,799 samples, 56.96%)</title><rect x="43.0327%" y="517" width="56.9600%" height="15" fill="rgb(223,111,35)" fg:x="116949" fg:w="154799"/><text x="43.2827%" y="527.50">rs-1brc.exe`std::panicking::try::do_call</text></g><g><title>rs-1brc.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;usize&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (154,799 samples, 56.96%)</title><rect x="43.0327%" y="501" width="56.9600%" height="15" fill="rgb(229,147,28)" fg:x="116949" fg:w="154799"/><text x="43.2827%" y="511.50">rs-1brc.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer..</text></g><g><title>rs-1brc.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;,tuple$&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (21,570 samples, 7.94%)</title><rect x="92.0557%" y="485" width="7.9369%" height="15" fill="rgb(211,29,28)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="495.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (21,570 samples, 7.94%)</title><rect x="92.0557%" y="469" width="7.9369%" height="15" fill="rgb(228,72,33)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="479.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`std::panicking::try&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt; &gt; &gt; &gt;(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (21,570 samples, 7.94%)</title><rect x="92.0557%" y="453" width="7.9369%" height="15" fill="rgb(205,214,31)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="463.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`std::panicking::try::do_call (21,570 samples, 7.94%)</title><rect x="92.0557%" y="437" width="7.9369%" height="15" fill="rgb(224,111,15)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="447.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;usize&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*)()&gt;,rs_1brc::approach_3::run::closure_env$1&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;usize&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::reduce::ReduceConsumer&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt; (*) (21,570 samples, 7.94%)</title><rect x="92.0557%" y="421" width="7.9369%" height="15" fill="rgb(253,21,26)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="431.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::reduce::ReduceFolder&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (21,570 samples, 7.94%)</title><rect x="92.0557%" y="405" width="7.9369%" height="15" fill="rgb(245,139,43)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="415.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`rayon::iter::reduce::impl$5::complete(rayon::iter::reduce::ReduceFolder&lt;rs_1brc::approach_3::run::closure_env$2,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (21,570 samples, 7.94%)</title><rect x="92.0557%" y="389" width="7.9369%" height="15" fill="rgb(252,170,7)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="399.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`core::iter::adapters::map::impl$2::fold&lt;hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,core::slice::iter::Iter&lt;usize&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$2&gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;usize&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt; &gt;, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (21,570 samples, 7.94%)</title><rect x="92.0557%" y="373" width="7.9369%" height="15" fill="rgb(231,118,14)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="383.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`core::slice::iter::impl$181::fold(core::slice::iter::Iter&lt;usize&gt;, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;usize&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,ref$ (21,570 samples, 7.94%)</title><rect x="92.0557%" y="357" width="7.9369%" height="15" fill="rgb(238,83,0)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="367.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;usize&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault&lt;ahash::fallback_hash::AHasher&gt;,allocator_api2::stable::alloc::global::Global&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$1&gt;,ref$&lt;rs_1brc::approach_3::run::closure_env$2&gt; &gt;*, hashbrown::map::HashMap&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt;,rs_1brc::approach_3::Data,core::hash::BuildHasherDefault (21,570 samples, 7.94%)</title><rect x="92.0557%" y="341" width="7.9369%" height="15" fill="rgb(221,39,39)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="351.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;usize&gt; &gt;,rs_1brc::approach_3::run::closure_env$1&gt; (21,570 samples, 7.94%)</title><rect x="92.0557%" y="325" width="7.9369%" height="15" fill="rgb(222,119,46)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="335.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::run::closure$1 (21,570 samples, 7.94%)</title><rect x="92.0557%" y="309" width="7.9369%" height="15" fill="rgb(222,165,49)" fg:x="250178" fg:w="21570"/><text x="92.3057%" y="319.50">rs-1brc.exe..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::next (7,859 samples, 2.89%)</title><rect x="97.1008%" y="293" width="2.8918%" height="15" fill="rgb(219,113,52)" fg:x="263889" fg:w="7859"/><text x="97.3508%" y="303.50">rs..</text></g><g><title>rs-1brc.exe`rs_1brc::approach_3::fill_by_slice(ref$&lt;slice2$ (3,344 samples, 1.23%)</title><rect x="98.7622%" y="277" width="1.2305%" height="15" fill="rgb(214,7,15)" fg:x="268404" fg:w="3344"/><text x="99.0122%" y="287.50"></text></g><g><title>rs-1brc.exe`core::intrinsics::copy_nonoverlapping (3,282 samples, 1.21%)</title><rect x="98.7850%" y="261" width="1.2076%" height="15" fill="rgb(235,32,4)" fg:x="268466" fg:w="3282"/><text x="99.0350%" y="271.50"></text></g><g><title>rs-1brc.exe`memcpy (432 samples, 0.16%)</title><rect x="99.8337%" y="245" width="0.1590%" height="15" fill="rgb(238,90,54)" fg:x="271316" fg:w="432"/><text x="100.0837%" y="255.50"></text></g><g><title>rs-1brc.exe`alloc::boxed::impl$47::call_once (271,733 samples, 99.99%)</title><rect x="0.0059%" y="917" width="99.9871%" height="15" fill="rgb(213,208,19)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="927.50">rs-1brc.exe`alloc::boxed::impl$47::call_once</text></g><g><title>rs-1brc.exe`alloc::boxed::impl$47::call_once (271,733 samples, 99.99%)</title><rect x="0.0059%" y="901" width="99.9871%" height="15" fill="rgb(233,156,4)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="911.50">rs-1brc.exe`alloc::boxed::impl$47::call_once</text></g><g><title>rs-1brc.exe`alloc::boxed::impl$8::drop (271,733 samples, 99.99%)</title><rect x="0.0059%" y="885" width="99.9871%" height="15" fill="rgb(207,194,5)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="895.50">rs-1brc.exe`alloc::boxed::impl$8::drop</text></g><g><title>rs-1brc.exe`core::alloc::layout::Layout::for_value_raw (271,733 samples, 99.99%)</title><rect x="0.0059%" y="869" width="99.9871%" height="15" fill="rgb(206,111,30)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="879.50">rs-1brc.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>rs-1brc.exe`core::mem::size_of_val_raw (271,733 samples, 99.99%)</title><rect x="0.0059%" y="853" width="99.9871%" height="15" fill="rgb(243,70,54)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="863.50">rs-1brc.exe`core::mem::size_of_val_raw</text></g><g><title>rs-1brc.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (271,733 samples, 99.99%)</title><rect x="0.0059%" y="837" width="99.9871%" height="15" fill="rgb(242,28,8)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="847.50">rs-1brc.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;,t..</text></g><g><title>rs-1brc.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (271,733 samples, 99.99%)</title><rect x="0.0059%" y="821" width="99.9871%" height="15" fill="rgb(219,106,18)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="831.50">rs-1brc.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tu..</text></g><g><title>rs-1brc.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (271,733 samples, 99.99%)</title><rect x="0.0059%" y="805" width="99.9871%" height="15" fill="rgb(244,222,10)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="815.50">rs-1brc.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$</text></g><g><title>rs-1brc.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (271,733 samples, 99.99%)</title><rect x="0.0059%" y="789" width="99.9871%" height="15" fill="rgb(236,179,52)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="799.50">rs-1brc.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner</text></g><g><title>rs-1brc.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (271,733 samples, 99.99%)</title><rect x="0.0059%" y="773" width="99.9871%" height="15" fill="rgb(213,23,39)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="783.50">rs-1brc.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref</text></g><g><title>rs-1brc.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (271,733 samples, 99.99%)</title><rect x="0.0059%" y="757" width="99.9871%" height="15" fill="rgb(238,48,10)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="767.50">rs-1brc.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>rs-1brc.exe`rayon_core::registry::ThreadBuilder::run (271,733 samples, 99.99%)</title><rect x="0.0059%" y="741" width="99.9871%" height="15" fill="rgb(251,196,23)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="751.50">rs-1brc.exe`rayon_core::registry::ThreadBuilder::run</text></g><g><title>rs-1brc.exe`rayon_core::registry::main_loop (271,733 samples, 99.99%)</title><rect x="0.0059%" y="725" width="99.9871%" height="15" fill="rgb(250,152,24)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="735.50">rs-1brc.exe`rayon_core::registry::main_loop</text></g><g><title>rs-1brc.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work (271,733 samples, 99.99%)</title><rect x="0.0059%" y="709" width="99.9871%" height="15" fill="rgb(209,150,17)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="719.50">rs-1brc.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work</text></g><g><title>rs-1brc.exe`rayon_core::registry::WorkerThread::wait_until_cold (271,733 samples, 99.99%)</title><rect x="0.0059%" y="693" width="99.9871%" height="15" fill="rgb(234,202,34)" fg:x="16" fg:w="271733"/><text x="0.2559%" y="703.50">rs-1brc.exe`rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>`0x7FFCC4FAAA48 (271,748 samples, 99.99%)</title><rect x="0.0007%" y="965" width="99.9926%" height="15" fill="rgb(253,148,53)" fg:x="2" fg:w="271748"/><text x="0.2507%" y="975.50">`0x7FFCC4FAAA48</text></g><g><title>`0x7FFCC379257D (271,748 samples, 99.99%)</title><rect x="0.0007%" y="949" width="99.9926%" height="15" fill="rgb(218,129,16)" fg:x="2" fg:w="271748"/><text x="0.2507%" y="959.50">`0x7FFCC379257D</text></g><g><title>rs-1brc.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (271,734 samples, 99.99%)</title><rect x="0.0059%" y="933" width="99.9875%" height="15" fill="rgb(216,85,19)" fg:x="16" fg:w="271734"/><text x="0.2559%" y="943.50">rs-1brc.exe`std::sys::pal::windows::thread::impl$0::new::thread_start</text></g><g><title>all (271,768 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(235,228,7)" fg:x="0" fg:w="271768"/><text x="0.2500%" y="991.50"></text></g></svg></svg>